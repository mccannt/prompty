PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE prompts (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      title TEXT NOT NULL,
      body TEXT NOT NULL,
      tags TEXT,
      locked INTEGER DEFAULT 0
    );
INSERT INTO prompts VALUES(1,'Generate Comprehensive Unit Tests',replace('Write comprehensive unit tests for the following function/class:\n\n[Insert code here]\n\nRequirements:\n- Test framework: [Jest/Mocha/PyTest/JUnit/etc.]\n- Cover edge cases and error conditions\n- Include positive and negative test cases\n- Mock external dependencies if needed\n- Aim for >90% code coverage\n\nFor each test, include:\n- Descriptive test names\n- Arrange-Act-Assert pattern\n- Clear assertions with meaningful error messages\n- Setup and teardown if needed','\n',char(10)),'Technical,Testing,Engineering',1);
INSERT INTO prompts VALUES(2,'Sprint Retrospective Action Plan',replace('Create a comprehensive sprint retrospective action plan based on the following feedback:\n\n[Insert retrospective notes]\n\nStructure the output as:\n\n**What Went Well:**\n- [List positive outcomes]\n\n**What Could Be Improved:**\n- [List areas for improvement]\n\n**Action Items:**\n1. [Specific action] - Owner: [Name] - Due: [Date]\n2. [Specific action] - Owner: [Name] - Due: [Date]\n\n**Key Metrics:**\n- Sprint velocity: [number]\n- Completed story points: [number]\n- Blockers encountered: [number]\n\n**Next Sprint Focus:**\n[Priority areas for next sprint]','\n',char(10)),'Non-Technical,Agile,Meetings',1);
INSERT INTO prompts VALUES(3,'Comprehensive Bug Report Generator',replace('Create a detailed bug report for the following issue:\n\n**Bug Summary:** [Brief description]\n\n**Environment:**\n- OS: [Operating System]\n- Browser/App Version: [Version]\n- Device: [Device type]\n\n**Steps to Reproduce:**\n1. [Step 1]\n2. [Step 2]\n3. [Step 3]\n\n**Expected Result:**\n[What should happen]\n\n**Actual Result:**\n[What actually happens]\n\n**Additional Information:**\n- Screenshots/Videos: [Attach if available]\n- Console errors: [Any error messages]\n- Frequency: [Always/Sometimes/Rarely]\n- Impact: [High/Medium/Low]\n- Workaround: [If any exists]\n\n**Priority:** [P1-Critical/P2-High/P3-Medium/P4-Low]\n**Severity:** [Blocker/Critical/Major/Minor/Trivial]','\n',char(10)),'Technical,Jira,Bug',1);
INSERT INTO prompts VALUES(4,'Professional Team Communication',replace('Draft a professional team communication for the following situation:\n\n[Describe the situation/announcement]\n\n**Communication Type:** [Email/Slack/All-hands/Newsletter]\n**Audience:** [Team/Department/Company-wide]\n**Tone:** [Informative/Celebratory/Urgent/Reassuring]\n\nStructure:\n- **Subject/Title:** [Clear, actionable subject]\n- **Opening:** [Context and purpose]\n- **Key Information:** [Main points with bullet points]\n- **Action Items:** [What people need to do]\n- **Timeline:** [Important dates]\n- **Contact:** [Who to reach out to for questions]\n- **Closing:** [Professional sign-off]\n\nKeep it concise, clear, and actionable.','\n',char(10)),'Non-Technical,HR,Communication',1);
INSERT INTO prompts VALUES(5,'Code Review Checklist & Feedback',replace('Perform a comprehensive code review for the following code:\n\n[Insert code here]\n\n**Review Criteria:**\n- Code quality and readability\n- Performance considerations\n- Security vulnerabilities\n- Best practices adherence\n- Error handling\n- Test coverage\n- Documentation\n- Maintainability\n\n**Provide:**\n- Specific feedback with line references\n- Suggestions for improvement\n- Priority level for each issue (High/Medium/Low)\n- Positive feedback on good practices\n- Overall assessment and recommendation','\n',char(10)),'Technical,Engineering,Code Review',1);
INSERT INTO prompts VALUES(6,'Technical Architecture Decision Record (ADR)',replace('Create an Architecture Decision Record for:\n\n**Decision:** [What decision needs to be made]\n\n**Status:** [Proposed/Accepted/Deprecated/Superseded]\n\n**Context:**\n[Background and problem statement]\n\n**Decision:**\n[The change that we''re proposing or have agreed to implement]\n\n**Consequences:**\n**Positive:**\n- [Benefit 1]\n- [Benefit 2]\n\n**Negative:**\n- [Drawback 1]\n- [Drawback 2]\n\n**Alternatives Considered:**\n1. [Alternative 1] - [Why rejected]\n2. [Alternative 2] - [Why rejected]\n\n**Implementation Notes:**\n[Technical details, migration path, timeline]','\n',char(10)),'Technical,Architecture,Documentation',1);
INSERT INTO prompts VALUES(7,'API Documentation Generator',replace('Generate comprehensive API documentation for:\n\n**Endpoint:** [HTTP Method] [URL]\n\n**Description:** [What this endpoint does]\n\n**Authentication:** [Required/Optional - Type]\n\n**Parameters:**\n- **Path:** [param1: type - description]\n- **Query:** [param1: type - description]\n- **Body:** [JSON schema or description]\n\n**Request Example:**\n```\n[Sample request]\n```\n\n**Response Examples:**\n**Success (200):**\n```json\n[Sample response]\n```\n\n**Error (4xx/5xx):**\n```json\n[Error response]\n```\n\n**Rate Limiting:** [Limits if applicable]\n\n**SDK Examples:**\n- JavaScript: [code example]\n- Python: [code example]\n- cURL: [command example]','\n',char(10)),'Technical,API,Documentation',1);
INSERT INTO prompts VALUES(8,'Incident Response & Postmortem',replace('Create an incident response plan and postmortem for:\n\n**Incident:** [Brief description]\n\n**IMMEDIATE RESPONSE:**\n1. **Assess Impact:** [Severity level, affected users/systems]\n2. **Communicate:** [Who to notify, communication channels]\n3. **Mitigate:** [Immediate steps to reduce impact]\n4. **Investigate:** [Initial investigation steps]\n\n**POSTMORTEM:**\n\n**Timeline:**\n- [Time] - [Event description]\n- [Time] - [Response action]\n\n**Root Cause:**\n[Primary cause of the incident]\n\n**Impact:**\n- Duration: [How long]\n- Users affected: [Number/percentage]\n- Services affected: [List]\n\n**Action Items:**\n1. [Preventive measure] - Owner: [Name] - Due: [Date]\n2. [Process improvement] - Owner: [Name] - Due: [Date]\n\n**Lessons Learned:**\n[Key takeaways for future prevention]','\n',char(10)),'Technical,Incident,DevOps',1);
INSERT INTO prompts VALUES(9,'Performance Optimization Analysis',replace('Analyze and optimize performance for:\n\n**System/Component:** [What you''re optimizing]\n\n**Current Performance Metrics:**\n- Response time: [current]\n- Throughput: [current]\n- Resource usage: [CPU/Memory/Disk]\n- Error rate: [current]\n\n**Performance Analysis:**\n1. **Bottlenecks Identified:**\n   - [Bottleneck 1]: [Impact and cause]\n   - [Bottleneck 2]: [Impact and cause]\n\n2. **Optimization Recommendations:**\n   - [Optimization 1]: [Expected improvement]\n   - [Optimization 2]: [Expected improvement]\n\n3. **Implementation Plan:**\n   - Phase 1: [Quick wins]\n   - Phase 2: [Medium-term improvements]\n   - Phase 3: [Long-term optimizations]\n\n**Success Metrics:**\n- Target response time: [goal]\n- Target throughput: [goal]\n- Resource efficiency: [goal]\n\n**Monitoring & Alerting:**\n[How to track improvements]','\n',char(10)),'Technical,Performance,Optimization',1);
INSERT INTO prompts VALUES(10,'Employee Performance Review',replace('Conduct a comprehensive performance review for:\n\n**Employee:** [Name]\n**Role:** [Position]\n**Review Period:** [Date range]\n\n**Performance Areas:**\n\n**1. Goal Achievement:**\n- [Goal 1]: [Met/Exceeded/Partially Met/Not Met] - [Comments]\n- [Goal 2]: [Status] - [Comments]\n\n**2. Core Competencies:**\n- Technical Skills: [Rating 1-5] - [Comments]\n- Communication: [Rating 1-5] - [Comments]\n- Teamwork: [Rating 1-5] - [Comments]\n- Problem Solving: [Rating 1-5] - [Comments]\n\n**3. Strengths:**\n[Key strengths demonstrated]\n\n**4. Areas for Development:**\n[Areas needing improvement]\n\n**5. Goals for Next Period:**\n1. [Specific goal with timeline]\n2. [Specific goal with timeline]\n\n**6. Career Development:**\n[Growth opportunities and support needed]\n\n**Overall Rating:** [Exceeds/Meets/Below Expectations]\n**Recommended Actions:** [Promotion/Raise/Training/PIP]','\n',char(10)),'HR,Performance,Management',1);
INSERT INTO prompts VALUES(11,'Employee Onboarding Checklist',replace('Create a comprehensive onboarding plan for:\n\n**New Hire:** [Name]\n**Position:** [Role]\n**Start Date:** [Date]\n**Manager:** [Name]\n\n**PRE-ARRIVAL (1 week before):**\n- [ ] Send welcome email with first day details\n- [ ] Prepare workspace and equipment\n- [ ] Create accounts (email, systems, tools)\n- [ ] Schedule first week meetings\n- [ ] Prepare onboarding materials\n\n**FIRST DAY:**\n- [ ] Welcome and office tour\n- [ ] IT setup and system access\n- [ ] HR paperwork completion\n- [ ] Team introductions\n- [ ] Review role expectations\n- [ ] Assign onboarding buddy\n\n**FIRST WEEK:**\n- [ ] Department overview sessions\n- [ ] Key stakeholder meetings\n- [ ] Training schedule setup\n- [ ] Initial project assignments\n- [ ] Check-in with manager\n\n**FIRST MONTH:**\n- [ ] Skills assessment\n- [ ] Goal setting session\n- [ ] Feedback collection\n- [ ] Integration evaluation\n\n**SUCCESS METRICS:**\n- Time to productivity: [target]\n- Satisfaction score: [target]\n- Retention at 90 days: [target]','\n',char(10)),'HR,Onboarding,Management',1);
INSERT INTO prompts VALUES(12,'Feedback & 1:1 Meeting Guide',replace('Structure for effective 1:1 meetings:\n\n**Employee:** [Name]\n**Date:** [Date]\n**Duration:** [30-60 minutes]\n\n**AGENDA:**\n\n**1. Check-in (5 minutes)**\n- How are you feeling overall?\n- Any immediate concerns or blockers?\n\n**2. Progress Review (15 minutes)**\n- Current project updates\n- Goal progress since last meeting\n- Wins and challenges\n\n**3. Feedback Exchange (15 minutes)**\n- **Manager to Employee:**\n  - [Specific positive feedback]\n  - [Areas for improvement]\n  - [Support needed]\n\n- **Employee to Manager:**\n  - [What''s working well]\n  - [What could be improved]\n  - [Support needed]\n\n**4. Development & Growth (10 minutes)**\n- Career goals discussion\n- Skill development opportunities\n- Training or mentoring needs\n\n**5. Action Items (5 minutes)**\n- [ ] [Action item 1] - Due: [Date]\n- [ ] [Action item 2] - Due: [Date]\n\n**NEXT MEETING:** [Date and time]\n\n**NOTES:**\n[Key discussion points and decisions]','\n',char(10)),'HR,Feedback,Management,Meetings',1);
INSERT INTO prompts VALUES(13,'JIRA Project Management & Workflow Setup',replace('Set up a comprehensive JIRA project for:\n\n**Project:** [Project Name]\n**Team Size:** [Number]\n**Methodology:** [Scrum/Kanban/Hybrid]\n\n**PROJECT CONFIGURATION:**\n\n**1. Issue Types:**\n- Epic: [For large features]\n- Story: [User stories]\n- Task: [Development tasks]\n- Bug: [Defects]\n- Sub-task: [Breakdown of stories]\n\n**2. Workflow States:**\n- To Do → In Progress → Code Review → Testing → Done\n- [Custom states if needed]\n\n**3. Custom Fields:**\n- Story Points: [For estimation]\n- Sprint: [Sprint assignment]\n- Component: [System component]\n- Priority: [Business priority]\n\n**4. Board Configuration:**\n- Columns: [Workflow states]\n- Swimlanes: [By assignee/priority]\n- Quick filters: [Active sprint, My issues, Bugs]\n\n**5. Automation Rules:**\n- Auto-assign based on component\n- Transition issues on PR merge\n- Notify on high-priority bugs\n\n**6. Reporting:**\n- Burndown charts\n- Velocity tracking\n- Bug trend analysis\n\n**TEAM GUIDELINES:**\n[Best practices for issue creation and management]','\n',char(10)),'Jira,Project Management,Agile',1);
INSERT INTO prompts VALUES(14,'Social Media Strategy & Content Plan',replace('Develop a comprehensive social media strategy for:\n\n**Brand/Product:** [Name]\n**Target Audience:** [Demographics]\n**Goals:** [Awareness/Engagement/Leads/Sales]\n\n**PLATFORM STRATEGY:**\n\n**LinkedIn:**\n- Content: [Professional insights, company updates]\n- Frequency: [X posts per week]\n- Best times: [Optimal posting schedule]\n\n**Twitter:**\n- Content: [Industry news, quick tips, engagement]\n- Frequency: [X posts per day]\n- Hashtag strategy: [Relevant hashtags]\n\n**Instagram:**\n- Content: [Visual content, behind-scenes]\n- Frequency: [X posts per week]\n- Story strategy: [Daily stories, highlights]\n\n**CONTENT CALENDAR (Monthly):**\n\nWeek 1:\n- Monday: [Content type and topic]\n- Wednesday: [Content type and topic]\n- Friday: [Content type and topic]\n\n**CONTENT THEMES:**\n- Educational (40%): [Tips, tutorials, insights]\n- Promotional (20%): [Product features, offers]\n- Community (30%): [User content, testimonials]\n- Behind-scenes (10%): [Team, culture, process]\n\n**ENGAGEMENT STRATEGY:**\n- Response time target: [X hours]\n- Community management approach\n- Influencer collaboration plan\n\n**METRICS & KPIs:**\n- Reach: [Target numbers]\n- Engagement rate: [Target %]\n- Follower growth: [Monthly target]\n- Click-through rate: [Target %]\n- Conversions: [Target numbers]','\n',char(10)),'Social Media,Marketing,Strategy',1);
INSERT INTO prompts VALUES(15,'Integration Test Strategy',replace('Design a comprehensive integration testing strategy for:\n\n**System:** [Application/Service name]\n**Architecture:** [Microservices/Monolith/Hybrid]\n\n**INTEGRATION POINTS:**\n1. **Database Integration:**\n   - Connection testing\n   - Transaction handling\n   - Data consistency checks\n   - Performance under load\n\n2. **API Integration:**\n   - Endpoint connectivity\n   - Authentication/authorization\n   - Error handling\n   - Rate limiting behavior\n\n3. **Third-party Services:**\n   - External API reliability\n   - Fallback mechanisms\n   - Timeout handling\n   - Data transformation\n\n**TEST SCENARIOS:**\n- Happy path workflows\n- Error conditions and edge cases\n- Network failures and timeouts\n- Data validation across boundaries\n- Security and authorization\n\n**TOOLS & FRAMEWORK:**\n- Testing framework: [Postman/REST Assured/etc.]\n- Test data management\n- Environment setup\n- CI/CD integration\n\n**SUCCESS CRITERIA:**\n- Coverage targets: [percentage]\n- Performance benchmarks\n- Reliability metrics','\n',char(10)),'Technical,Testing,Integration',1);
INSERT INTO prompts VALUES(16,'End-to-End Test Automation',replace('Create an end-to-end test automation plan for:\n\n**Application:** [Web/Mobile/Desktop]\n**User Flows:** [Critical business processes]\n\n**TEST AUTOMATION STRATEGY:**\n\n**1. Test Pyramid Approach:**\n   - Unit tests: [70% - Fast, isolated]\n   - Integration tests: [20% - Component interaction]\n   - E2E tests: [10% - Full user journeys]\n\n**2. Critical User Journeys:**\n   - User registration/login\n   - Core business workflows\n   - Payment/checkout processes\n   - Data entry and validation\n   - Error scenarios\n\n**3. Test Data Management:**\n   - Test data creation strategy\n   - Data cleanup procedures\n   - Environment-specific data\n   - Sensitive data handling\n\n**4. Framework Selection:**\n   - Tool: [Selenium/Cypress/Playwright/Appium]\n   - Language: [JavaScript/Python/Java]\n   - Reporting: [Allure/TestNG/Jest]\n\n**5. CI/CD Integration:**\n   - Trigger conditions\n   - Parallel execution\n   - Failure notifications\n   - Test result reporting\n\n**MAINTENANCE STRATEGY:**\n- Page Object Model implementation\n- Flaky test identification\n- Regular test review and updates\n- Performance monitoring','\n',char(10)),'Technical,Testing,Automation',1);
INSERT INTO prompts VALUES(17,'Database Schema Design & Migration',replace('Design a database schema and migration strategy for:\n\n**Project:** [Application name]\n**Database:** [PostgreSQL/MySQL/MongoDB/etc.]\n**Scale:** [Expected data volume and users]\n\n**SCHEMA DESIGN:**\n\n**1. Entity Relationship Design:**\n   - Primary entities and attributes\n   - Relationships and cardinality\n   - Normalization level (1NF, 2NF, 3NF)\n   - Denormalization considerations\n\n**2. Table Structure:**\n```sql\nCREATE TABLE [table_name] (\n  id SERIAL PRIMARY KEY,\n  [column_name] [data_type] [constraints],\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW()\n);\n```\n\n**3. Indexing Strategy:**\n   - Primary and foreign key indexes\n   - Composite indexes for queries\n   - Partial indexes for filtered data\n   - Performance impact analysis\n\n**4. Migration Plan:**\n   - Version control for schema changes\n   - Rollback procedures\n   - Zero-downtime deployment\n   - Data preservation strategies\n\n**PERFORMANCE CONSIDERATIONS:**\n- Query optimization\n- Connection pooling\n- Caching strategies\n- Monitoring and alerting\n\n**SECURITY:**\n- Access control and permissions\n- Data encryption at rest/transit\n- Audit logging\n- Backup and recovery procedures','\n',char(10)),'Technical,Engineering,Database',1);
INSERT INTO prompts VALUES(18,'Microservices Architecture Design',replace('Design a microservices architecture for:\n\n**System:** [Application/Platform name]\n**Scale:** [Users, requests, data volume]\n**Team Size:** [Number of developers]\n\n**SERVICE DECOMPOSITION:**\n\n**1. Service Boundaries:**\n   - Business capability alignment\n   - Data ownership principles\n   - Team structure considerations\n   - Communication patterns\n\n**2. Service Catalog:**\n   - **[Service Name]:**\n     - Responsibility: [What it does]\n     - Data: [What it owns]\n     - APIs: [Endpoints exposed]\n     - Dependencies: [Other services]\n\n**3. Communication Patterns:**\n   - Synchronous: REST APIs, GraphQL\n   - Asynchronous: Message queues, events\n   - Service mesh: [Istio/Linkerd/Consul]\n   - API Gateway: [Kong/Zuul/Ambassador]\n\n**4. Data Management:**\n   - Database per service\n   - Event sourcing patterns\n   - CQRS implementation\n   - Data consistency strategies\n\n**CROSS-CUTTING CONCERNS:**\n- Service discovery and registration\n- Load balancing and circuit breakers\n- Distributed tracing and logging\n- Security and authentication\n- Configuration management\n\n**DEPLOYMENT STRATEGY:**\n- Containerization (Docker/Kubernetes)\n- CI/CD pipelines\n- Blue-green deployments\n- Monitoring and observability','\n',char(10)),'Technical,Engineering,Architecture',1);
INSERT INTO prompts VALUES(19,'JIRA Reporting & Analytics Dashboard',replace('Create comprehensive JIRA reporting and analytics for:\n\n**Project:** [Project name]\n**Team:** [Team name]\n**Reporting Period:** [Sprint/Monthly/Quarterly]\n\n**KEY METRICS DASHBOARD:**\n\n**1. Velocity & Throughput:**\n   - Sprint velocity trends\n   - Story points completed vs. committed\n   - Cycle time analysis\n   - Lead time measurements\n\n**2. Quality Metrics:**\n   - Bug discovery rate\n   - Bug resolution time\n   - Defect density\n   - Escaped defects to production\n\n**3. Team Performance:**\n   - Individual contribution analysis\n   - Workload distribution\n   - Blocked time analysis\n   - Sprint goal achievement rate\n\n**CUSTOM REPORTS:**\n\n**Burndown Analysis:**\n- Sprint burndown charts\n- Release burndown tracking\n- Scope creep identification\n- Predictive completion dates\n\n**Issue Analysis:**\n- Issue type distribution\n- Priority vs. resolution time\n- Component-wise defect analysis\n- Root cause categorization\n\n**AUTOMATION SETUP:**\n- Automated report generation\n- Email notifications for stakeholders\n- Dashboard refresh schedules\n- Data export capabilities\n\n**ACTIONABLE INSIGHTS:**\n- Bottleneck identification\n- Process improvement recommendations\n- Resource allocation suggestions\n- Risk mitigation strategies','\n',char(10)),'Jira,Reporting,Analytics',1);
INSERT INTO prompts VALUES(20,'JIRA Agile Board Configuration & Optimization',replace('Configure and optimize JIRA Agile boards for:\n\n**Team:** [Team name]\n**Methodology:** [Scrum/Kanban/Scrumban]\n**Project Type:** [Software/Marketing/Operations]\n\n**BOARD CONFIGURATION:**\n\n**1. Column Setup:**\n   - **To Do:** [Backlog items ready for work]\n   - **In Progress:** [Active development]\n   - **Code Review:** [Peer review process]\n   - **Testing:** [QA validation]\n   - **Done:** [Completed and deployed]\n\n**2. Swimlane Configuration:**\n   - By Priority: [Critical, High, Medium, Low]\n   - By Assignee: [Team member lanes]\n   - By Epic: [Feature grouping]\n   - By Component: [System areas]\n\n**3. Quick Filters:**\n   - My Issues: assignee = currentUser()\n   - Current Sprint: sprint in openSprints()\n   - Bugs Only: type = Bug\n   - High Priority: priority in (Highest, High)\n   - Blocked Items: status = Blocked\n\n**4. Card Layout:**\n   - Issue key and summary\n   - Assignee avatar\n   - Story points\n   - Priority indicator\n   - Due date (if applicable)\n\n**WIP LIMITS:**\n- In Progress: [3-5 items per person]\n- Code Review: [2-3 items]\n- Testing: [3-4 items]\n\n**BOARD OPTIMIZATION:**\n- Daily standup integration\n- Impediment tracking\n- Cycle time monitoring\n- Throughput analysis\n\n**TEAM GUIDELINES:**\n- Card movement criteria\n- Definition of Done\n- Escalation procedures\n- Board maintenance schedule','\n',char(10)),'Jira,Agile,Configuration',1);
INSERT INTO prompts VALUES(21,'Slack Channel Management & Organization',replace('Organize and manage Slack channels for:\n\n**Team/Organization:** [Name]\n**Size:** [Number of members]\n**Structure:** [Departments/Projects/Functions]\n\n**CHANNEL STRATEGY:**\n\n**1. Channel Categories:**\n   - **#general:** Company-wide announcements\n   - **#random:** Casual conversations and team building\n   - **#team-[name]:** Department-specific discussions\n   - **#project-[name]:** Project-focused collaboration\n   - **#support-[type]:** Help and troubleshooting\n\n**2. Naming Conventions:**\n   - **Public channels:** #team-engineering, #project-mobile-app\n   - **Private channels:** #leadership-team, #hr-confidential\n   - **Temporary channels:** #event-hackathon-2024\n   - **Integration channels:** #alerts-production, #github-notifications\n\n**3. Channel Purposes & Guidelines:**\n   - Clear channel descriptions\n   - Posting guidelines and etiquette\n   - Response time expectations\n   - Escalation procedures\n\n**CHANNEL MANAGEMENT:**\n\n**Moderation:**\n- Channel admin assignments\n- Message retention policies\n- Content moderation guidelines\n- Archive inactive channels\n\n**Integrations:**\n- GitHub/GitLab notifications\n- JIRA issue updates\n- Monitoring alerts\n- Calendar reminders\n\n**BEST PRACTICES:**\n- Use threads for detailed discussions\n- Pin important messages\n- Regular channel cleanup\n- Onboarding new members\n- Cross-channel communication protocols','\n',char(10)),'Communication,Slack,Organization',1);
INSERT INTO prompts VALUES(22,'Email Templates for Professional Communication',replace('Create professional email templates for:\n\n**Organization:** [Company name]\n**Purpose:** [Business communication type]\n\n**EMAIL TEMPLATES:**\n\n**1. Project Status Update:**\n```\nSubject: [Project Name] - Weekly Status Update [Date]\n\nHi [Stakeholder Name],\n\nHere''s this week''s progress update for [Project Name]:\n\n**Completed This Week:**\n• [Achievement 1]\n• [Achievement 2]\n\n**In Progress:**\n• [Current work item 1] - [Expected completion]\n• [Current work item 2] - [Expected completion]\n\n**Upcoming Next Week:**\n• [Planned work 1]\n• [Planned work 2]\n\n**Blockers/Risks:**\n• [Issue 1] - [Mitigation plan]\n\n**Metrics:**\n• Progress: [X]% complete\n• Timeline: [On track/At risk/Delayed]\n• Budget: [Status]\n\nPlease let me know if you have any questions.\n\nBest regards,\n[Your name]\n```\n\n**2. Meeting Request:**\n```\nSubject: Meeting Request: [Topic] - [Proposed dates]\n\nHi [Name],\n\nI''d like to schedule a meeting to discuss [specific topic/objective].\n\n**Purpose:** [Clear meeting objective]\n**Duration:** [Time needed]\n**Attendees:** [Who should attend]\n**Agenda:**\n1. [Topic 1] - [Time allocation]\n2. [Topic 2] - [Time allocation]\n3. [Next steps] - [Time allocation]\n\n**Proposed times:**\n• [Option 1]\n• [Option 2]\n• [Option 3]\n\nPlease let me know which time works best for you.\n\nThanks,\n[Your name]\n```\n\n**3. Follow-up After Meeting:**\n```\nSubject: Follow-up: [Meeting topic] - Action Items\n\nHi everyone,\n\nThank you for the productive meeting today. Here''s a summary:\n\n**Decisions Made:**\n• [Decision 1]\n• [Decision 2]\n\n**Action Items:**\n• [Action 1] - [Owner] - [Due date]\n• [Action 2] - [Owner] - [Due date]\n\n**Next Steps:**\n• [Next meeting date]\n• [Follow-up timeline]\n\nPlease reach out if you have any questions or concerns.\n\nBest,\n[Your name]\n```','\n',char(10)),'Communication,Email,Templates',1);
INSERT INTO prompts VALUES(23,'Bug Triage & Prioritization Framework',replace('Create a systematic bug triage and prioritization process:\n\n**Bug Information:**\n- Bug ID: [Unique identifier]\n- Reporter: [Name and contact]\n- Date Reported: [Date]\n- Affected Version: [Software version]\n\n**TRIAGE ASSESSMENT:**\n\n**1. Impact Analysis:**\n- **Severity Levels:**\n  - Critical: System down, data loss, security breach\n  - High: Major feature broken, significant user impact\n  - Medium: Minor feature issues, workarounds available\n  - Low: Cosmetic issues, edge cases\n\n**2. Priority Matrix:**\n- **P1 (Immediate):** Critical bugs affecting production\n- **P2 (High):** High-impact bugs for next release\n- **P3 (Medium):** Standard bugs for upcoming sprints\n- **P4 (Low):** Backlog items for future consideration\n\n**3. Assignment Criteria:**\n- Component ownership\n- Developer expertise\n- Current workload\n- Availability\n\n**TRIAGE DECISION:**\n- Priority: [P1/P2/P3/P4]\n- Assigned to: [Developer name]\n- Target resolution: [Timeline]\n- Dependencies: [Blocking issues]\n\n**COMMUNICATION:**\n- Stakeholder notification\n- Status update frequency\n- Escalation path','\n',char(10)),'Bug,Technical,Triage',1);
INSERT INTO prompts VALUES(24,'Bug Root Cause Analysis Template',replace('Conduct thorough root cause analysis for:\n\n**Bug Summary:** [Brief description]\n**Bug ID:** [Reference number]\n**Discovery Date:** [When found]\n**Reporter:** [Who reported]\n\n**ROOT CAUSE ANALYSIS:**\n\n**1. Problem Statement:**\n- What happened?\n- When did it happen?\n- Who was affected?\n- What was the business impact?\n\n**2. Timeline of Events:**\n- [Time] - [Event description]\n- [Time] - [Action taken]\n- [Time] - [Result observed]\n\n**3. Investigation Methods:**\n- Log analysis\n- Code review\n- Database queries\n- User interviews\n- System monitoring\n\n**4. Root Cause Identification:**\n- **Primary Cause:** [Main reason]\n- **Contributing Factors:** [Secondary causes]\n- **Why Analysis:** [5 Whys technique]\n  1. Why did X happen? [Answer]\n  2. Why did [Answer 1] happen? [Answer]\n  3. Why did [Answer 2] happen? [Answer]\n  4. Why did [Answer 3] happen? [Answer]\n  5. Why did [Answer 4] happen? [Root cause]\n\n**5. Prevention Strategy:**\n- Code improvements\n- Process changes\n- Testing enhancements\n- Monitoring additions\n\n**6. Action Items:**\n- [ ] [Immediate fix] - [Owner] - [Due date]\n- [ ] [Prevention measure] - [Owner] - [Due date]\n- [ ] [Process improvement] - [Owner] - [Due date]','\n',char(10)),'Bug,Analysis,Technical',1);
INSERT INTO prompts VALUES(25,'Business Process Documentation',replace('Document a comprehensive business process:\n\n**Process Name:** [Process title]\n**Department:** [Responsible department]\n**Process Owner:** [Name and role]\n**Last Updated:** [Date]\n\n**PROCESS OVERVIEW:**\n\n**1. Purpose & Scope:**\n- Objective: [What this process achieves]\n- Scope: [What''s included/excluded]\n- Stakeholders: [Who''s involved]\n\n**2. Process Flow:**\n- **Step 1:** [Action] - [Responsible party] - [Duration]\n- **Step 2:** [Action] - [Responsible party] - [Duration]\n- **Step 3:** [Action] - [Responsible party] - [Duration]\n\n**3. Inputs & Outputs:**\n- **Inputs:** [Required information/materials]\n- **Outputs:** [Deliverables/results]\n- **Tools:** [Systems/software used]\n\n**4. Roles & Responsibilities:**\n- **Process Owner:** [Responsibilities]\n- **Participants:** [Role-specific duties]\n- **Approvers:** [Decision authorities]\n\n**5. Quality Controls:**\n- Checkpoints: [Validation steps]\n- Metrics: [Success measurements]\n- Reviews: [Audit schedule]\n\n**6. Exception Handling:**\n- Common issues and resolutions\n- Escalation procedures\n- Contingency plans\n\n**7. Related Documents:**\n- Policies and procedures\n- Forms and templates\n- Training materials','\n',char(10)),'Non-Technical,Documentation,Process',1);
INSERT INTO prompts VALUES(26,'Stakeholder Communication Plan',replace('Create a comprehensive stakeholder communication strategy:\n\n**Project/Initiative:** [Name]\n**Communication Lead:** [Name]\n**Planning Date:** [Date]\n\n**STAKEHOLDER ANALYSIS:**\n\n**1. Stakeholder Mapping:**\n- **Primary Stakeholders:**\n  - [Name/Role] - [Interest level] - [Influence level]\n  - [Name/Role] - [Interest level] - [Influence level]\n\n- **Secondary Stakeholders:**\n  - [Name/Role] - [Interest level] - [Influence level]\n\n**2. Communication Matrix:**\n\n| Stakeholder | Information Needs | Frequency | Method | Responsible |\n|-------------|------------------|-----------|--------|--------------|\n| [Name] | [What they need] | [How often] | [Email/Meeting] | [Who sends] |\n| [Name] | [What they need] | [How often] | [Report/Call] | [Who sends] |\n\n**3. Communication Channels:**\n- **Formal:** Reports, presentations, meetings\n- **Informal:** Emails, calls, conversations\n- **Digital:** Dashboards, portals, notifications\n\n**4. Message Framework:**\n- Key messages\n- Value propositions\n- Risk communications\n- Change impacts\n\n**5. Feedback Mechanisms:**\n- Survey schedules\n- Feedback sessions\n- Open forums\n- One-on-one meetings\n\n**6. Crisis Communication:**\n- Emergency contacts\n- Escalation procedures\n- Message templates\n- Approval processes','\n',char(10)),'Non-Technical,Communication,Planning',1);
INSERT INTO prompts VALUES(27,'Effective Meeting Planning & Facilitation',replace('Plan and facilitate productive meetings:\n\n**Meeting Details:**\n- **Title:** [Meeting name]\n- **Date/Time:** [When]\n- **Duration:** [How long]\n- **Location/Platform:** [Where/Zoom link]\n\n**PRE-MEETING PREPARATION:**\n\n**1. Meeting Purpose:**\n- Objective: [What you want to achieve]\n- Type: [Information sharing/Decision making/Brainstorming]\n- Success criteria: [How you''ll measure success]\n\n**2. Participant Planning:**\n- **Required attendees:** [Must be present]\n- **Optional attendees:** [Good to have]\n- **Roles:** [Facilitator, note-taker, timekeeper]\n\n**3. Agenda Structure:**\n- **Opening (5 min):** Welcome, objectives, ground rules\n- **Topic 1 (X min):** [Discussion point] - [Outcome needed]\n- **Topic 2 (X min):** [Discussion point] - [Outcome needed]\n- **Decisions (10 min):** Summary of decisions made\n- **Action items (5 min):** Next steps and owners\n- **Closing (5 min):** Recap and next meeting\n\n**FACILITATION TECHNIQUES:**\n- Start and end on time\n- Keep discussions focused\n- Encourage participation\n- Manage dominant speakers\n- Document decisions and actions\n\n**POST-MEETING:**\n- Send meeting notes within 24 hours\n- Follow up on action items\n- Schedule next meeting if needed\n- Gather feedback for improvement','\n',char(10)),'Meetings,Facilitation,Planning',1);
INSERT INTO prompts VALUES(28,'Slack Workflow Automation Setup',replace('Create automated workflows in Slack:\n\n**Workflow Purpose:** [What you want to automate]\n**Team/Channel:** [Where it applies]\n**Trigger:** [What starts the workflow]\n\n**WORKFLOW DESIGN:**\n\n**1. Common Automation Scenarios:**\n- **New employee onboarding:** Welcome messages, channel invites\n- **Incident response:** Alert notifications, team assembly\n- **Daily standups:** Automated check-ins, status updates\n- **Approval processes:** Request routing, decision tracking\n- **Meeting scheduling:** Calendar integration, reminders\n\n**2. Workflow Steps:**\n- **Step 1:** [Trigger event] → [Action taken]\n- **Step 2:** [Condition check] → [If/then logic]\n- **Step 3:** [User input] → [Response handling]\n- **Step 4:** [Final action] → [Completion notification]\n\n**3. Integration Points:**\n- **External tools:** [JIRA, GitHub, Calendar, etc.]\n- **Data sources:** [Databases, APIs, spreadsheets]\n- **Notification targets:** [Channels, DMs, email]\n\n**4. Workflow Configuration:**\n```\nTrigger: [Event type]\nConditions: [When to run]\nActions: [What to do]\nNotifications: [Who to inform]\nError handling: [Fallback procedures]\n```\n\n**5. Testing & Deployment:**\n- Test with sample data\n- Validate all paths\n- Monitor performance\n- Gather user feedback\n- Iterate and improve\n\n**6. Maintenance:**\n- Regular review schedule\n- Performance monitoring\n- User training updates\n- Documentation maintenance','\n',char(10)),'Slack,Automation,Workflow',1);
INSERT INTO prompts VALUES(29,'Slack Incident Communication Protocol',replace('Establish incident communication procedures in Slack:\n\n**Incident Type:** [System outage/Security breach/Data issue]\n**Severity Level:** [Critical/High/Medium/Low]\n**Incident Commander:** [Name]\n\n**INCIDENT COMMUNICATION SETUP:**\n\n**1. Channel Structure:**\n- **#incident-[ID]:** Main coordination channel\n- **#incident-updates:** Public status updates\n- **#incident-leadership:** Executive communication\n- **#incident-external:** Customer communication prep\n\n**2. Notification Hierarchy:**\n- **Immediate (0-5 min):**\n  - Incident detection\n  - Initial team notification\n  - Channel creation\n\n- **Short-term (5-15 min):**\n  - Stakeholder alerts\n  - Leadership notification\n  - Customer communication prep\n\n- **Ongoing (15+ min):**\n  - Regular status updates\n  - Progress reports\n  - Resolution communication\n\n**3. Communication Templates:**\n\n**Initial Alert:**\n```\n🚨 INCIDENT DETECTED\nSeverity: [Level]\nImpact: [Description]\nIncident Commander: @[name]\nChannel: #incident-[ID]\nNext update: [Time]\n```\n\n**Status Update:**\n```\n📊 INCIDENT UPDATE - [Time]\nStatus: [Investigating/Mitigating/Resolved]\nProgress: [What''s been done]\nNext steps: [What''s planned]\nETA: [Expected resolution]\n```\n\n**Resolution Notice:**\n```\n✅ INCIDENT RESOLVED - [Time]\nDuration: [Total time]\nRoot cause: [Brief explanation]\nPostmortem: [When/where]\nThank you: [Team acknowledgment]\n```\n\n**4. Escalation Procedures:**\n- Severity-based notification rules\n- Executive communication triggers\n- External communication approval\n- Media response coordination','\n',char(10)),'Slack,Incident,Communication',1);
INSERT INTO prompts VALUES(30,'Customer Support Email Templates',replace('Professional customer support email responses:\n\n**Customer Issue:** [Brief description]\n**Ticket ID:** [Reference number]\n**Customer:** [Name/Account]\n\n**EMAIL TEMPLATES:**\n\n**1. Acknowledgment Email:**\n```\nSubject: We''ve received your request - Ticket #[ID]\n\nDear [Customer Name],\n\nThank you for contacting us. We''ve received your request regarding [issue summary] and have assigned it ticket #[ID].\n\n**What happens next:**\n• Our team will review your request within [timeframe]\n• You''ll receive updates as we investigate\n• Expected resolution time: [estimate]\n\n**Your request details:**\n[Summary of the issue]\n\nIf you have additional information or questions, please reply to this email.\n\nBest regards,\n[Your name]\n[Company] Support Team\n```\n\n**2. Solution Provided:**\n```\nSubject: Solution for your request - Ticket #[ID]\n\nDear [Customer Name],\n\nGreat news! We''ve resolved the issue you reported.\n\n**Solution:**\n[Step-by-step resolution]\n\n**To prevent this in the future:**\n[Preventive measures]\n\n**Additional resources:**\n• [Help article link]\n• [Video tutorial]\n• [FAQ section]\n\nPlease let us know if this resolves your issue or if you need further assistance.\n\nBest regards,\n[Your name]\n```\n\n**3. Escalation Required:**\n```\nSubject: Update on your request - Ticket #[ID]\n\nDear [Customer Name],\n\nThank you for your patience. Your request requires additional investigation from our specialized team.\n\n**Current status:**\n[What we''ve done so far]\n\n**Next steps:**\n[What happens next]\n\n**New timeline:**\n[Updated expectations]\n\nWe apologize for any inconvenience and appreciate your understanding.\n\nBest regards,\n[Your name]\n```','\n',char(10)),'Email,Customer Service,Templates',1);
INSERT INTO prompts VALUES(31,'Internal Business Email Best Practices',replace('Guidelines for effective internal business emails:\n\n**Email Purpose:** [Information/Request/Update/Decision]\n**Recipients:** [To/CC/BCC strategy]\n**Priority:** [High/Normal/Low]\n\n**EMAIL STRUCTURE:**\n\n**1. Subject Line Best Practices:**\n- Be specific and actionable\n- Include deadlines: "Budget Review - Response needed by Friday"\n- Use prefixes: "[ACTION REQUIRED]", "[FYI]", "[URGENT]"\n- Avoid vague subjects like "Quick question" or "Update"\n\n**2. Email Body Template:**\n```\n[Greeting]\nHi [Name],\n\n[Purpose - One sentence explaining why you''re writing]\nI''m writing to [request/inform/update] you about [specific topic].\n\n[Context - Brief background if needed]\n[Background information in 1-2 sentences]\n\n[Main Content - Key information organized clearly]\n• Point 1: [Details]\n• Point 2: [Details]\n• Point 3: [Details]\n\n[Action Items - What you need from recipients]\n**Action needed:**\n• [Specific request] - Due: [Date]\n• [Another request] - Due: [Date]\n\n[Closing]\nPlease let me know if you have any questions.\n\nBest regards,\n[Your name]\n```\n\n**3. Email Etiquette:**\n- Reply within 24 hours\n- Use "Reply All" judiciously\n- Keep emails concise (under 200 words)\n- Use bullet points for clarity\n- Proofread before sending\n\n**4. When NOT to use email:**\n- Complex discussions (use meetings)\n- Sensitive topics (use phone/in-person)\n- Urgent matters (use instant messaging)\n- Lengthy explanations (use documents)','\n',char(10)),'Email,Communication,Best Practices',1);
INSERT INTO prompts VALUES(32,'Social Media Crisis Management',replace('Handle social media crises effectively:\n\n**Crisis Type:** [Negative review/Product issue/PR incident]\n**Platform:** [Twitter/Facebook/LinkedIn/Instagram]\n**Severity:** [Low/Medium/High/Critical]\n\n**CRISIS RESPONSE FRAMEWORK:**\n\n**1. Immediate Response (0-2 hours):**\n- **Assess the situation:**\n  - What happened?\n  - How widespread is it?\n  - Who''s involved?\n  - What''s the sentiment?\n\n- **Initial response:**\n  - Acknowledge the issue\n  - Show empathy\n  - Commit to investigation\n  - Provide timeline for updates\n\n**2. Response Templates:**\n\n**Acknowledgment:**\n"We''re aware of the concerns raised about [issue]. We take this seriously and are investigating immediately. We''ll provide an update within [timeframe]. Thank you for bringing this to our attention."\n\n**Apology (when appropriate):**\n"We sincerely apologize for [specific issue]. This doesn''t reflect our values or standards. We''re taking immediate action to [corrective measures] and will ensure this doesn''t happen again."\n\n**Clarification:**\n"We''d like to clarify the situation regarding [issue]. Here are the facts: [clear explanation]. We understand the confusion and appreciate the opportunity to set the record straight."\n\n**3. Escalation Procedures:**\n- When to involve legal team\n- Executive approval requirements\n- Media response coordination\n- Internal communication protocols\n\n**4. Recovery Strategy:**\n- Corrective action communication\n- Reputation rebuilding content\n- Community engagement plan\n- Monitoring and measurement\n\n**5. Prevention Measures:**\n- Content approval processes\n- Team training programs\n- Monitoring tools setup\n- Response plan documentation','\n',char(10)),'Social Media,Crisis Management,Communication',1);
INSERT INTO prompts VALUES(33,'Social Media Content Calendar Planning',replace('Create a comprehensive social media content calendar:\n\n**Brand:** [Company/Product name]\n**Planning Period:** [Month/Quarter]\n**Platforms:** [List active platforms]\n\n**CONTENT CALENDAR STRUCTURE:**\n\n**1. Content Themes by Day:**\n- **Monday:** Motivation Monday (Inspirational content)\n- **Tuesday:** Tips Tuesday (Educational content)\n- **Wednesday:** Wisdom Wednesday (Industry insights)\n- **Thursday:** Throwback Thursday (Company history/milestones)\n- **Friday:** Feature Friday (Product highlights)\n- **Weekend:** Community content (User-generated content)\n\n**2. Content Mix (80/20 Rule):**\n- **80% Value-driven content:**\n  - Educational posts (30%)\n  - Industry news and insights (25%)\n  - Behind-the-scenes content (15%)\n  - User-generated content (10%)\n\n- **20% Promotional content:**\n  - Product announcements (10%)\n  - Sales and offers (5%)\n  - Company news (5%)\n\n**3. Monthly Calendar Template:**\n\n| Date | Platform | Content Type | Topic | Hashtags | CTA | Status |\n|------|----------|--------------|-------|----------|-----|--------|\n| 1st | LinkedIn | Article | [Topic] | #hashtag | [Action] | Draft |\n| 2nd | Twitter | Tip | [Topic] | #hashtag | [Action] | Scheduled |\n| 3rd | Instagram | Photo | [Topic] | #hashtag | [Action] | Published |\n\n**4. Content Creation Workflow:**\n- Week 1: Content ideation and planning\n- Week 2: Content creation and design\n- Week 3: Review and approval process\n- Week 4: Scheduling and publishing\n\n**5. Performance Tracking:**\n- Engagement rates by content type\n- Best performing times/days\n- Hashtag performance\n- Click-through rates\n- Conversion metrics','\n',char(10)),'Social Media,Planning,Content',1);
INSERT INTO prompts VALUES(34,'Technical Writing Style Guide',replace('Create consistent technical documentation:\n\n**Document Type:** [API docs/User manual/Technical spec]\n**Audience:** [Developers/End users/Technical writers]\n**Complexity Level:** [Beginner/Intermediate/Advanced]\n\n**WRITING STYLE GUIDELINES:**\n\n**1. Voice and Tone:**\n- **Voice:** Clear, concise, authoritative\n- **Tone:** Professional but approachable\n- **Perspective:** Second person ("you") for instructions\n- **Tense:** Present tense for current features\n\n**2. Structure Standards:**\n- **Headings:** Use hierarchical structure (H1, H2, H3)\n- **Paragraphs:** Keep to 3-4 sentences maximum\n- **Lists:** Use bullets for unordered, numbers for steps\n- **Code blocks:** Always include syntax highlighting\n\n**3. Language Conventions:**\n- **Acronyms:** Spell out on first use: "Application Programming Interface (API)"\n- **Technical terms:** Define in glossary\n- **Action words:** Use active voice: "Click Save" not "Save should be clicked"\n- **Consistency:** Maintain same terms throughout\n\n**4. Formatting Standards:**\n```\n**Bold:** For UI elements, important concepts\n*Italic:* For emphasis, new terms\n`Code:` For inline code, file names\nCode blocks: For multi-line code examples\n> Blockquotes: For important notes\n```\n\n**5. Content Organization:**\n- **Overview:** What this document covers\n- **Prerequisites:** What readers need to know\n- **Step-by-step:** Numbered instructions\n- **Examples:** Real-world use cases\n- **Troubleshooting:** Common issues and solutions\n- **Reference:** Quick lookup information\n\n**6. Quality Checklist:**\n- [ ] Accurate and up-to-date information\n- [ ] Clear and logical flow\n- [ ] Consistent terminology\n- [ ] Proper grammar and spelling\n- [ ] Working code examples\n- [ ] Accessible to target audience','\n',char(10)),'Writing,Documentation,Technical',1);
INSERT INTO prompts VALUES(35,'Content Writing Framework',replace('Structure for engaging content creation:\n\n**Content Type:** [Blog post/Article/Web copy/Email]\n**Target Audience:** [Demographics and interests]\n**Goal:** [Inform/Persuade/Entertain/Convert]\n\n**CONTENT FRAMEWORK:**\n\n**1. Research Phase:**\n- **Audience research:**\n  - Pain points and challenges\n  - Preferred content formats\n  - Language and tone preferences\n  - Content consumption habits\n\n- **Topic research:**\n  - Keyword analysis\n  - Competitor content review\n  - Trending topics\n  - Expert insights\n\n**2. Content Structure (AIDA Framework):**\n\n**Attention (Hook):**\n- Compelling headline\n- Intriguing opening question\n- Surprising statistic\n- Relatable story\n\n**Interest (Value Proposition):**\n- Clear benefit statement\n- Problem identification\n- Solution preview\n- Credibility indicators\n\n**Desire (Proof and Benefits):**\n- Detailed explanations\n- Case studies and examples\n- Social proof and testimonials\n- Feature-benefit connections\n\n**Action (Call to Action):**\n- Clear next steps\n- Compelling CTA button/link\n- Urgency or scarcity\n- Contact information\n\n**3. Writing Techniques:**\n- **Storytelling:** Use narratives to engage\n- **Data-driven:** Include relevant statistics\n- **Conversational:** Write like you speak\n- **Scannable:** Use subheadings and bullets\n\n**4. Optimization:**\n- SEO keyword integration\n- Meta descriptions\n- Internal/external linking\n- Image optimization\n- Mobile-friendly formatting','\n',char(10)),'Writing,Content,Marketing',1);
INSERT INTO prompts VALUES(36,'Grant Writing Proposal Template',replace('Structure for successful grant applications:\n\n**Grant Information:**\n- **Funder:** [Organization name]\n- **Program:** [Grant program title]\n- **Amount:** [Requested funding]\n- **Deadline:** [Submission date]\n\n**PROPOSAL STRUCTURE:**\n\n**1. Executive Summary (1 page):**\n- Project title and organization\n- Problem statement (2-3 sentences)\n- Proposed solution overview\n- Requested amount and timeline\n- Expected outcomes and impact\n\n**2. Statement of Need (2-3 pages):**\n- **Problem definition:**\n  - Statistical evidence\n  - Geographic scope\n  - Affected populations\n  - Current gaps in services\n\n- **Supporting evidence:**\n  - Research citations\n  - Community data\n  - Stakeholder input\n  - Needs assessment results\n\n**3. Project Description (3-4 pages):**\n- **Goals and objectives:**\n  - SMART objectives (Specific, Measurable, Achievable, Relevant, Time-bound)\n  - Long-term goals\n  - Short-term milestones\n\n- **Methodology:**\n  - Approach and strategies\n  - Implementation timeline\n  - Key activities\n  - Deliverables\n\n**4. Evaluation Plan (1-2 pages):**\n- Success metrics and KPIs\n- Data collection methods\n- Evaluation timeline\n- Reporting schedule\n\n**5. Budget and Justification (1-2 pages):**\n- Detailed budget breakdown\n- Cost-effectiveness analysis\n- Matching funds/in-kind contributions\n- Budget narrative\n\n**6. Organizational Capacity (1 page):**\n- Organization history and mission\n- Relevant experience\n- Staff qualifications\n- Previous grant successes\n\n**7. Sustainability Plan:**\n- Long-term funding strategy\n- Community support\n- Institutional commitment\n- Scalability potential','\n',char(10)),'Writing,Grants,Proposals',1);
INSERT INTO prompts VALUES(37,'Strategic Planning Framework',replace('Develop a comprehensive strategic plan:\n\n**Organization:** [Company/Department name]\n**Planning Period:** [1 year/3 years/5 years]\n**Planning Team:** [Key stakeholders]\n\n**STRATEGIC PLANNING PROCESS:**\n\n**1. Situational Analysis:**\n- **SWOT Analysis:**\n  - Strengths: [Internal advantages]\n  - Weaknesses: [Internal limitations]\n  - Opportunities: [External possibilities]\n  - Threats: [External challenges]\n\n- **Market Analysis:**\n  - Industry trends\n  - Competitive landscape\n  - Customer needs\n  - Regulatory environment\n\n**2. Vision & Mission:**\n- **Vision Statement:** [Where we want to be]\n- **Mission Statement:** [Why we exist]\n- **Core Values:** [What guides our decisions]\n\n**3. Strategic Objectives:**\n- **Financial Goals:** [Revenue, profit, growth targets]\n- **Market Goals:** [Market share, expansion, positioning]\n- **Operational Goals:** [Efficiency, quality, innovation]\n- **People Goals:** [Talent, culture, development]\n\n**4. Strategic Initiatives:**\n- **Initiative 1:** [Description] - [Timeline] - [Resources] - [Owner]\n- **Initiative 2:** [Description] - [Timeline] - [Resources] - [Owner]\n- **Initiative 3:** [Description] - [Timeline] - [Resources] - [Owner]\n\n**5. Implementation Plan:**\n- Quarterly milestones\n- Resource allocation\n- Risk mitigation\n- Success metrics\n\n**6. Monitoring & Review:**\n- KPI dashboard\n- Review schedule\n- Adjustment process\n- Communication plan','\n',char(10)),'Planning,Strategy,Management',1);
INSERT INTO prompts VALUES(38,'Project Planning Template',replace('Create a comprehensive project plan:\n\n**Project Information:**\n- **Project Name:** [Title]\n- **Project Manager:** [Name]\n- **Start Date:** [Date]\n- **End Date:** [Date]\n- **Budget:** [Amount]\n\n**PROJECT PLANNING FRAMEWORK:**\n\n**1. Project Charter:**\n- **Objective:** [What we''re trying to achieve]\n- **Scope:** [What''s included/excluded]\n- **Success Criteria:** [How we measure success]\n- **Stakeholders:** [Who''s involved]\n- **Assumptions:** [What we''re assuming]\n- **Constraints:** [Limitations we face]\n\n**2. Work Breakdown Structure (WBS):**\n- **Phase 1: [Name]**\n  - Task 1.1: [Description] - [Duration] - [Resources]\n  - Task 1.2: [Description] - [Duration] - [Resources]\n- **Phase 2: [Name]**\n  - Task 2.1: [Description] - [Duration] - [Resources]\n  - Task 2.2: [Description] - [Duration] - [Resources]\n\n**3. Timeline & Dependencies:**\n- Critical path identification\n- Task dependencies\n- Milestone schedule\n- Buffer time allocation\n\n**4. Resource Planning:**\n- Team members and roles\n- Equipment and tools\n- Budget allocation\n- External vendors\n\n**5. Risk Management:**\n- Risk identification\n- Impact assessment\n- Mitigation strategies\n- Contingency plans\n\n**6. Communication Plan:**\n- Stakeholder updates\n- Team meetings\n- Status reporting\n- Issue escalation','\n',char(10)),'Planning,Project Management,Management',1);
INSERT INTO prompts VALUES(39,'Customer Service Excellence Framework',replace('Establish exceptional customer service standards:\n\n**Service Context:** [Product/Service type]\n**Customer Segment:** [Target audience]\n**Service Channels:** [Phone/Email/Chat/In-person]\n\n**SERVICE EXCELLENCE FRAMEWORK:**\n\n**1. Service Standards:**\n- **Response Times:**\n  - Phone: Answer within 3 rings\n  - Email: Respond within 4 hours\n  - Chat: Respond within 30 seconds\n  - Social media: Respond within 1 hour\n\n- **Quality Standards:**\n  - First contact resolution: 80%\n  - Customer satisfaction: 90%+\n  - Issue escalation: <10%\n  - Follow-up completion: 100%\n\n**2. Service Process:**\n- **Greeting:** Professional, warm welcome\n- **Listening:** Active listening, empathy\n- **Understanding:** Clarify needs, ask questions\n- **Solving:** Provide solutions, alternatives\n- **Confirming:** Ensure satisfaction\n- **Following up:** Check resolution success\n\n**3. Communication Guidelines:**\n- Use positive language\n- Avoid jargon and technical terms\n- Show empathy and understanding\n- Take ownership of issues\n- Provide clear next steps\n\n**4. Difficult Situation Handling:**\n- **De-escalation techniques:**\n  - Stay calm and professional\n  - Listen without interrupting\n  - Acknowledge concerns\n  - Apologize when appropriate\n  - Focus on solutions\n\n**5. Knowledge Management:**\n- FAQ database\n- Product knowledge base\n- Escalation procedures\n- Expert contact list\n\n**6. Continuous Improvement:**\n- Customer feedback analysis\n- Service metric tracking\n- Team training programs\n- Process optimization','\n',char(10)),'Customer Service,Communication,Quality',1);
INSERT INTO prompts VALUES(40,'Customer Complaint Resolution Process',replace('Handle customer complaints effectively:\n\n**Complaint Information:**\n- **Customer:** [Name/Account]\n- **Issue:** [Brief description]\n- **Channel:** [How received]\n- **Priority:** [High/Medium/Low]\n\n**COMPLAINT RESOLUTION PROCESS:**\n\n**1. Initial Response (Within 24 hours):**\n- Acknowledge receipt\n- Express empathy\n- Assign case number\n- Set expectations\n- Gather additional information\n\n**2. Investigation Phase:**\n- **Fact gathering:**\n  - Review customer history\n  - Check system records\n  - Interview relevant staff\n  - Examine processes\n\n- **Root cause analysis:**\n  - What went wrong?\n  - Why did it happen?\n  - How can we prevent it?\n\n**3. Resolution Development:**\n- **Solution options:**\n  - Immediate fixes\n  - Compensation offers\n  - Process improvements\n  - Policy exceptions\n\n- **Approval process:**\n  - Manager review\n  - Legal considerations\n  - Cost implications\n  - Precedent impact\n\n**4. Customer Communication:**\n- **Resolution presentation:**\n  - Clear explanation\n  - Sincere apology\n  - Specific actions\n  - Timeline commitments\n\n**5. Implementation & Follow-up:**\n- Execute agreed solutions\n- Monitor progress\n- Follow up with customer\n- Document lessons learned\n\n**6. Prevention Measures:**\n- Process improvements\n- Staff training\n- System updates\n- Policy revisions','\n',char(10)),'Customer Service,Problem Solving,Communication',1);
INSERT INTO prompts VALUES(41,'Training Program Development',replace('Design comprehensive training programs:\n\n**Training Program:** [Program name]\n**Target Audience:** [Learner demographics]\n**Learning Objectives:** [What participants will achieve]\n**Duration:** [Program length]\n\n**TRAINING PROGRAM DESIGN:**\n\n**1. Needs Assessment:**\n- **Performance gaps:**\n  - Current state analysis\n  - Desired state definition\n  - Gap identification\n\n- **Learner analysis:**\n  - Prior knowledge\n  - Learning preferences\n  - Motivation factors\n  - Constraints\n\n**2. Learning Objectives (SMART):**\n- **Specific:** Clear, well-defined outcomes\n- **Measurable:** Quantifiable results\n- **Achievable:** Realistic expectations\n- **Relevant:** Job-related skills\n- **Time-bound:** Completion timeline\n\n**3. Curriculum Design:**\n- **Module 1:** [Topic] - [Duration] - [Methods]\n  - Learning objectives\n  - Content outline\n  - Activities and exercises\n  - Assessment methods\n\n- **Module 2:** [Topic] - [Duration] - [Methods]\n  - Learning objectives\n  - Content outline\n  - Activities and exercises\n  - Assessment methods\n\n**4. Delivery Methods:**\n- **Instructor-led:** Classroom, workshops\n- **E-learning:** Online modules, videos\n- **Blended:** Combination approach\n- **On-the-job:** Mentoring, shadowing\n\n**5. Assessment Strategy:**\n- Pre-training assessment\n- Formative assessments\n- Summative evaluation\n- Performance observation\n- Feedback collection\n\n**6. Implementation Plan:**\n- Resource requirements\n- Scheduling logistics\n- Instructor preparation\n- Material development\n- Technology setup','\n',char(10)),'Education,Training,Development',1);
INSERT INTO prompts VALUES(42,'Learning & Development Strategy',replace('Create organizational learning strategy:\n\n**Organization:** [Company name]\n**Strategic Period:** [Timeline]\n**Learning Objectives:** [Organizational goals]\n\n**L&D STRATEGIC FRAMEWORK:**\n\n**1. Organizational Analysis:**\n- **Business strategy alignment:**\n  - Strategic priorities\n  - Performance requirements\n  - Future capabilities needed\n\n- **Current state assessment:**\n  - Skill inventory\n  - Competency gaps\n  - Learning culture\n  - Resource availability\n\n**2. Learning Architecture:**\n- **Core competencies:**\n  - Leadership skills\n  - Technical expertise\n  - Soft skills\n  - Digital literacy\n\n- **Learning pathways:**\n  - Career progression routes\n  - Skill development tracks\n  - Certification programs\n  - Cross-functional training\n\n**3. Delivery Ecosystem:**\n- **Formal learning:** 20%\n  - Classroom training\n  - Online courses\n  - Workshops\n  - Conferences\n\n- **Social learning:** 20%\n  - Mentoring programs\n  - Communities of practice\n  - Peer learning\n  - Knowledge sharing\n\n- **Experiential learning:** 60%\n  - On-the-job training\n  - Project assignments\n  - Job rotations\n  - Stretch assignments\n\n**4. Technology Platform:**\n- Learning management system\n- Content libraries\n- Mobile learning apps\n- Virtual reality training\n- AI-powered recommendations\n\n**5. Measurement & Analytics:**\n- Learning metrics\n- Business impact\n- ROI calculation\n- Learner satisfaction\n- Performance improvement','\n',char(10)),'Education,Strategy,Development',1);
INSERT INTO prompts VALUES(43,'Workshop Facilitation Guide',replace('Facilitate engaging and productive workshops:\n\n**Workshop Details:**\n- **Title:** [Workshop name]\n- **Duration:** [Time length]\n- **Participants:** [Number and roles]\n- **Objective:** [What you want to achieve]\n\n**WORKSHOP FACILITATION FRAMEWORK:**\n\n**1. Pre-Workshop Preparation:**\n- **Objective setting:**\n  - Clear outcomes\n  - Success criteria\n  - Participant expectations\n\n- **Content design:**\n  - Agenda structure\n  - Activity selection\n  - Material preparation\n  - Technology setup\n\n**2. Workshop Structure:**\n- **Opening (15 minutes):**\n  - Welcome and introductions\n  - Objective review\n  - Ground rules\n  - Agenda overview\n\n- **Main Content (70% of time):**\n  - Interactive presentations\n  - Group activities\n  - Discussions\n  - Problem-solving exercises\n\n- **Closing (15 minutes):**\n  - Key takeaways\n  - Action planning\n  - Next steps\n  - Feedback collection\n\n**3. Facilitation Techniques:**\n- **Engagement methods:**\n  - Icebreakers\n  - Energizers\n  - Breakout sessions\n  - Role-playing\n  - Case studies\n\n- **Group management:**\n  - Encourage participation\n  - Manage dominant voices\n  - Handle conflicts\n  - Keep on track\n  - Time management\n\n**4. Activity Examples:**\n- Brainstorming sessions\n- SWOT analysis\n- Mind mapping\n- World café method\n- Fishbowl discussions\n\n**5. Virtual Workshop Adaptations:**\n- Platform selection\n- Breakout room management\n- Digital collaboration tools\n- Engagement strategies\n- Technical support','\n',char(10)),'Education,Facilitation,Workshops',1);
INSERT INTO prompts VALUES(44,'Digital Marketing Campaign Strategy',replace('Create a comprehensive digital marketing campaign:\n\n**Campaign Details:**\n- **Product/Service:** [What you''re promoting]\n- **Target Audience:** [Demographics and psychographics]\n- **Campaign Goals:** [Awareness/Leads/Sales/Engagement]\n- **Budget:** [Total budget allocation]\n- **Timeline:** [Campaign duration]\n\n**DIGITAL MARKETING STRATEGY:**\n\n**1. Market Research:**\n- **Audience analysis:**\n  - Demographics (age, location, income)\n  - Psychographics (interests, values, behavior)\n  - Pain points and motivations\n  - Preferred channels and content\n\n- **Competitive analysis:**\n  - Competitor strategies\n  - Market positioning\n  - Pricing analysis\n  - Differentiation opportunities\n\n**2. Channel Strategy:**\n- **Search Engine Marketing:**\n  - SEO optimization\n  - Google Ads campaigns\n  - Keyword targeting\n  - Landing page optimization\n\n- **Social Media Marketing:**\n  - Platform selection\n  - Content calendar\n  - Paid advertising\n  - Influencer partnerships\n\n- **Email Marketing:**\n  - List building\n  - Segmentation\n  - Automation sequences\n  - Personalization\n\n- **Content Marketing:**\n  - Blog content\n  - Video marketing\n  - Webinars\n  - Downloadable resources\n\n**3. Campaign Execution:**\n- Creative development\n- Asset creation\n- Campaign setup\n- Testing and optimization\n- Launch coordination\n\n**4. Measurement & Analytics:**\n- KPI tracking\n- Conversion attribution\n- ROI analysis\n- Performance reporting\n- Optimization recommendations','\n',char(10)),'Marketing,Strategy,Digital',1);
INSERT INTO prompts VALUES(45,'Brand Positioning & Messaging Framework',replace('Develop compelling brand positioning and messaging:\n\n**Brand Information:**\n- **Brand Name:** [Company/Product name]\n- **Industry:** [Market sector]\n- **Target Market:** [Primary audience]\n- **Competitive Landscape:** [Key competitors]\n\n**BRAND POSITIONING FRAMEWORK:**\n\n**1. Brand Foundation:**\n- **Mission:** [Why we exist]\n- **Vision:** [Where we''re going]\n- **Values:** [What we believe in]\n- **Personality:** [How we communicate]\n\n**2. Positioning Statement:**\n"For [target audience] who [need/problem], [brand name] is the [category] that [unique benefit] because [reasons to believe]."\n\n**3. Value Proposition:**\n- **Functional benefits:** [What it does]\n- **Emotional benefits:** [How it makes you feel]\n- **Social benefits:** [How others perceive you]\n\n**4. Key Messages:**\n- **Primary message:** [Main value proposition]\n- **Supporting messages:**\n  - Message 1: [Benefit/proof point]\n  - Message 2: [Benefit/proof point]\n  - Message 3: [Benefit/proof point]\n\n**5. Messaging Architecture:**\n- **Elevator pitch:** [30-second version]\n- **Tagline:** [Memorable phrase]\n- **Proof points:** [Evidence/credentials]\n- **Call to action:** [What you want people to do]\n\n**6. Brand Voice & Tone:**\n- **Voice characteristics:** [Professional, friendly, authoritative]\n- **Tone variations:** [Formal, casual, urgent]\n- **Language guidelines:** [Words to use/avoid]\n- **Communication style:** [Direct, storytelling, technical]\n\n**7. Competitive Differentiation:**\n- Unique selling proposition\n- Competitive advantages\n- Market positioning map\n- Differentiation strategy','\n',char(10)),'Marketing,Branding,Strategy',1);
INSERT INTO prompts VALUES(46,'Personal Goal Setting & Achievement Plan',replace('Create a comprehensive personal goal achievement strategy:\n\n**Goal Information:**\n- **Goal Category:** [Career/Health/Financial/Personal]\n- **Time Frame:** [Short-term/Long-term]\n- **Priority Level:** [High/Medium/Low]\n\n**GOAL SETTING FRAMEWORK:**\n\n**1. SMART Goal Definition:**\n- **Specific:** [Exactly what you want to achieve]\n- **Measurable:** [How you''ll track progress]\n- **Achievable:** [Realistic given your resources]\n- **Relevant:** [Why this matters to you]\n- **Time-bound:** [Specific deadline]\n\n**2. Goal Breakdown:**\n- **Long-term vision:** [3-5 year outcome]\n- **Annual goals:** [This year''s targets]\n- **Quarterly milestones:** [90-day checkpoints]\n- **Monthly objectives:** [30-day actions]\n- **Weekly tasks:** [7-day activities]\n- **Daily habits:** [Daily practices]\n\n**3. Action Planning:**\n- **Phase 1:** [Initial steps] - [Timeline]\n  - Task 1: [Specific action] - [Due date]\n  - Task 2: [Specific action] - [Due date]\n\n- **Phase 2:** [Next steps] - [Timeline]\n  - Task 1: [Specific action] - [Due date]\n  - Task 2: [Specific action] - [Due date]\n\n**4. Resource Requirements:**\n- **Skills needed:** [What you need to learn]\n- **Tools/equipment:** [What you need to acquire]\n- **Support system:** [Who can help you]\n- **Financial investment:** [Budget required]\n\n**5. Obstacle Management:**\n- **Potential challenges:** [What might go wrong]\n- **Mitigation strategies:** [How to prevent/handle]\n- **Contingency plans:** [Alternative approaches]\n- **Support resources:** [Where to get help]\n\n**6. Progress Tracking:**\n- Success metrics\n- Review schedule\n- Adjustment process\n- Celebration milestones','\n',char(10)),'Personal,Goals,Planning',1);
INSERT INTO prompts VALUES(47,'Personal Productivity System',replace('Design an effective personal productivity system:\n\n**Productivity Assessment:**\n- **Current challenges:** [What''s not working]\n- **Time availability:** [How much time you have]\n- **Work style:** [Preferences and patterns]\n- **Goals:** [What you want to achieve]\n\n**PRODUCTIVITY SYSTEM DESIGN:**\n\n**1. Time Management Framework:**\n- **Time blocking:** [Schedule focused work periods]\n- **Priority matrix:** [Urgent vs. Important]\n- **Energy management:** [Match tasks to energy levels]\n- **Batch processing:** [Group similar tasks]\n\n**2. Task Organization:**\n- **Capture system:** [How to collect tasks/ideas]\n- **Categorization:** [Work/Personal/Projects]\n- **Prioritization:** [High/Medium/Low impact]\n- **Scheduling:** [When to do what]\n\n**3. Daily Routines:**\n- **Morning routine:** [Start day preparation]\n  - Review priorities\n  - Set intentions\n  - Prepare workspace\n\n- **Work routine:** [During work hours]\n  - Focused work blocks\n  - Break schedules\n  - Communication windows\n\n- **Evening routine:** [End day wrap-up]\n  - Review accomplishments\n  - Plan next day\n  - Reflection time\n\n**4. Tools & Systems:**\n- **Digital tools:** [Apps and software]\n- **Physical tools:** [Notebooks, planners]\n- **Automation:** [Recurring tasks]\n- **Templates:** [Standardized processes]\n\n**5. Habit Formation:**\n- **Keystone habits:** [High-impact behaviors]\n- **Habit stacking:** [Link new to existing]\n- **Environment design:** [Setup for success]\n- **Tracking methods:** [Monitor progress]\n\n**6. Review & Optimization:**\n- Weekly reviews\n- Monthly assessments\n- Quarterly planning\n- Annual goal setting','\n',char(10)),'Personal,Productivity,Organization',1);
INSERT INTO prompts VALUES(48,'Personal Learning & Development Plan',replace('Create a structured personal learning strategy:\n\n**Learning Objectives:**\n- **Skill area:** [What you want to learn]\n- **Current level:** [Beginner/Intermediate/Advanced]\n- **Target level:** [Where you want to be]\n- **Timeline:** [How long to achieve]\n\n**LEARNING DEVELOPMENT FRAMEWORK:**\n\n**1. Learning Assessment:**\n- **Current skills audit:**\n  - Strengths and expertise\n  - Knowledge gaps\n  - Learning preferences\n  - Available time\n\n- **Goal alignment:**\n  - Career objectives\n  - Personal interests\n  - Market demands\n  - Growth opportunities\n\n**2. Learning Strategy:**\n- **Learning methods:**\n  - Formal education (courses, certifications)\n  - Self-directed study (books, online resources)\n  - Experiential learning (projects, practice)\n  - Social learning (mentors, communities)\n\n- **Resource selection:**\n  - Books and publications\n  - Online courses and tutorials\n  - Workshops and conferences\n  - Professional networks\n\n**3. Learning Plan:**\n- **Phase 1: Foundation** [Timeline]\n  - Core concepts\n  - Basic skills\n  - Fundamental knowledge\n\n- **Phase 2: Application** [Timeline]\n  - Practical exercises\n  - Real-world projects\n  - Skill practice\n\n- **Phase 3: Mastery** [Timeline]\n  - Advanced techniques\n  - Complex applications\n  - Teaching others\n\n**4. Practice & Application:**\n- **Hands-on projects:** [Real applications]\n- **Practice schedule:** [Regular skill building]\n- **Feedback sources:** [How to get input]\n- **Portfolio development:** [Showcase learning]\n\n**5. Progress Tracking:**\n- Learning milestones\n- Skill assessments\n- Project completions\n- Certification achievements\n\n**6. Continuous Improvement:**\n- Regular review cycles\n- Learning method optimization\n- Goal adjustment\n- New opportunity identification','\n',char(10)),'Personal,Learning,Development',1);
INSERT INTO prompts VALUES(49,'Creative Brainstorming & Ideation Framework',replace('Generate innovative ideas and solutions:\n\n**Challenge/Opportunity:** [What you''re trying to solve or create]\n**Context:** [Background information]\n**Constraints:** [Limitations to work within]\n**Timeline:** [When ideas are needed]\n\n**CREATIVE IDEATION PROCESS:**\n\n**1. Problem Definition:**\n- **Challenge statement:** [Clear problem description]\n- **Success criteria:** [What good looks like]\n- **Stakeholders:** [Who''s affected]\n- **Current approaches:** [What''s been tried]\n\n**2. Divergent Thinking (Generate Ideas):**\n- **Brainstorming techniques:**\n  - Mind mapping\n  - SCAMPER method (Substitute, Combine, Adapt, Modify, Put to other uses, Eliminate, Reverse)\n  - "What if" scenarios\n  - Random word association\n  - Reverse brainstorming\n\n- **Idea generation rules:**\n  - Quantity over quality initially\n  - No criticism during generation\n  - Build on others'' ideas\n  - Encourage wild ideas\n  - Stay focused on topic\n\n**3. Idea Categories:**\n- **Incremental improvements:** [Small enhancements]\n- **Breakthrough innovations:** [Major changes]\n- **Disruptive solutions:** [Game changers]\n- **Hybrid approaches:** [Combining existing ideas]\n\n**4. Convergent Thinking (Evaluate Ideas):**\n- **Evaluation criteria:**\n  - Feasibility (Can we do it?)\n  - Viability (Should we do it?)\n  - Desirability (Do people want it?)\n  - Impact potential\n  - Resource requirements\n\n**5. Idea Development:**\n- **Top 3 ideas:** [Most promising concepts]\n- **Concept sketches:** [Visual representations]\n- **Prototype plans:** [How to test]\n- **Next steps:** [Action items]\n\n**6. Implementation Planning:**\n- Resource requirements\n- Timeline and milestones\n- Risk assessment\n- Success metrics','\n',char(10)),'Creative,Innovation,Problem Solving',1);
INSERT INTO prompts VALUES(50,'Design Thinking Workshop Guide',replace('Facilitate human-centered design process:\n\n**Design Challenge:** [Problem to solve]\n**Target Users:** [Who you''re designing for]\n**Workshop Duration:** [Time available]\n**Team Size:** [Number of participants]\n\n**DESIGN THINKING PROCESS:**\n\n**1. Empathize (Understanding Users):**\n- **User research methods:**\n  - User interviews\n  - Observation studies\n  - Journey mapping\n  - Persona development\n\n- **Empathy activities:**\n  - "A day in the life" scenarios\n  - Pain point identification\n  - Needs assessment\n  - Emotional journey mapping\n\n**2. Define (Problem Framing):**\n- **Point of view statement:**\n  "[User] needs [need] because [insight]"\n\n- **How might we questions:**\n  - HMW make the process easier?\n  - HMW reduce friction?\n  - HMW increase satisfaction?\n  - HMW solve the core problem?\n\n**3. Ideate (Solution Generation):**\n- **Ideation techniques:**\n  - Crazy 8s (8 ideas in 8 minutes)\n  - Worst possible idea\n  - Storyboarding\n  - Brainwriting\n\n**4. Prototype (Build to Think):**\n- **Prototype types:**\n  - Paper prototypes\n  - Digital wireframes\n  - Role-playing scenarios\n  - Storyboards\n\n- **Prototype principles:**\n  - Start rough, get feedback\n  - Fail fast and cheap\n  - Focus on key features\n  - Make it testable\n\n**5. Test (Learn from Users):**\n- **Testing methods:**\n  - User feedback sessions\n  - Usability testing\n  - A/B testing\n  - Pilot programs\n\n**6. Iterate (Refine Solutions):**\n- Incorporate feedback\n- Refine prototypes\n- Test again\n- Scale successful solutions','\n',char(10)),'Creative,Design,Innovation',1);
INSERT INTO prompts VALUES(51,'Content Creation & Storytelling Framework',replace('Create compelling content and narratives:\n\n**Content Purpose:** [What you want to achieve]\n**Target Audience:** [Who you''re creating for]\n**Content Type:** [Blog, video, presentation, etc.]\n**Key Message:** [Main point to communicate]\n\n**STORYTELLING FRAMEWORK:**\n\n**1. Story Structure (Hero''s Journey):**\n- **Setup:** [Introduce character and world]\n- **Inciting incident:** [Problem or challenge arises]\n- **Rising action:** [Obstacles and attempts to solve]\n- **Climax:** [Turning point or revelation]\n- **Falling action:** [Consequences of climax]\n- **Resolution:** [Problem solved, lesson learned]\n\n**2. Content Planning:**\n- **Hook:** [Attention-grabbing opening]\n  - Surprising statistic\n  - Thought-provoking question\n  - Personal anecdote\n  - Bold statement\n\n- **Value proposition:** [Why should they care?]\n  - What''s in it for them\n  - Problem you''re solving\n  - Benefit they''ll receive\n\n**3. Narrative Elements:**\n- **Characters:** [Who''s involved]\n  - Protagonist (hero)\n  - Antagonist (obstacle)\n  - Supporting characters\n\n- **Conflict:** [What''s at stake]\n  - Internal struggles\n  - External challenges\n  - Time pressure\n  - Resource constraints\n\n- **Emotion:** [How to make them feel]\n  - Empathy and connection\n  - Excitement and anticipation\n  - Relief and satisfaction\n\n**4. Content Structure:**\n- **Introduction:** [Set the stage]\n- **Body:** [Develop the story]\n  - Point 1 with supporting evidence\n  - Point 2 with examples\n  - Point 3 with case studies\n- **Conclusion:** [Tie it together]\n  - Key takeaways\n  - Call to action\n  - Next steps\n\n**5. Engagement Techniques:**\n- Visual storytelling\n- Interactive elements\n- Personal examples\n- Data and statistics\n- Metaphors and analogies','\n',char(10)),'Creative,Content,Storytelling',1);
INSERT INTO prompts VALUES(52,'Team Productivity Optimization',replace('Improve team efficiency and output:\n\n**Team Information:**\n- **Team Size:** [Number of members]\n- **Team Type:** [Development/Marketing/Operations]\n- **Current Challenges:** [Productivity issues]\n- **Goals:** [What you want to achieve]\n\n**PRODUCTIVITY OPTIMIZATION FRAMEWORK:**\n\n**1. Current State Assessment:**\n- **Productivity metrics:**\n  - Output per person/hour\n  - Task completion rates\n  - Quality indicators\n  - Time to delivery\n\n- **Workflow analysis:**\n  - Process mapping\n  - Bottleneck identification\n  - Waste elimination\n  - Handoff points\n\n**2. Time Management:**\n- **Meeting optimization:**\n  - Reduce unnecessary meetings\n  - Improve meeting efficiency\n  - Async communication\n  - Clear agendas and outcomes\n\n- **Focus time:**\n  - Deep work blocks\n  - Distraction elimination\n  - Communication windows\n  - Context switching reduction\n\n**3. Process Improvements:**\n- **Automation opportunities:**\n  - Repetitive task automation\n  - Workflow automation\n  - Reporting automation\n  - Communication automation\n\n- **Standardization:**\n  - Process documentation\n  - Template creation\n  - Best practice sharing\n  - Quality standards\n\n**4. Tool Optimization:**\n- **Technology stack review:**\n  - Tool consolidation\n  - Integration improvements\n  - Training needs\n  - Upgrade opportunities\n\n**5. Team Dynamics:**\n- **Collaboration enhancement:**\n  - Clear roles and responsibilities\n  - Communication protocols\n  - Knowledge sharing\n  - Cross-training\n\n**6. Measurement & Improvement:**\n- **KPI tracking:**\n  - Productivity metrics\n  - Quality measures\n  - Team satisfaction\n  - Continuous improvement\n\n**7. Implementation Plan:**\n- Priority improvements\n- Timeline and milestones\n- Resource requirements\n- Success metrics','\n',char(10)),'Productivity,Team,Optimization',1);
INSERT INTO prompts VALUES(53,'Workflow Automation Strategy',replace('Automate repetitive tasks and processes:\n\n**Process Information:**\n- **Process Name:** [What you want to automate]\n- **Current Method:** [How it''s done now]\n- **Frequency:** [How often it occurs]\n- **Time Investment:** [Current time spent]\n\n**AUTOMATION STRATEGY:**\n\n**1. Process Analysis:**\n- **Process mapping:**\n  - Step-by-step breakdown\n  - Decision points\n  - Input/output identification\n  - Stakeholder involvement\n\n- **Automation potential:**\n  - Rule-based tasks\n  - Repetitive actions\n  - Data processing\n  - Notification triggers\n\n**2. Automation Opportunities:**\n- **High-impact candidates:**\n  - High frequency tasks\n  - Time-consuming processes\n  - Error-prone activities\n  - Scalability bottlenecks\n\n- **Automation types:**\n  - Task automation (RPA)\n  - Workflow automation\n  - Data automation\n  - Communication automation\n\n**3. Tool Selection:**\n- **Automation platforms:**\n  - Zapier/Microsoft Power Automate\n  - Custom scripts (Python/JavaScript)\n  - Workflow tools (Monday.com, Asana)\n  - API integrations\n\n- **Selection criteria:**\n  - Ease of use\n  - Integration capabilities\n  - Scalability\n  - Cost effectiveness\n  - Maintenance requirements\n\n**4. Implementation Plan:**\n- **Phase 1: Quick wins** [Timeline]\n  - Simple automations\n  - Low-risk processes\n  - High-impact tasks\n\n- **Phase 2: Complex workflows** [Timeline]\n  - Multi-step processes\n  - Cross-system integration\n  - Advanced logic\n\n**5. Testing & Validation:**\n- **Testing approach:**\n  - Pilot testing\n  - Error handling\n  - Performance validation\n  - User acceptance\n\n**6. Monitoring & Optimization:**\n- Performance metrics\n- Error tracking\n- User feedback\n- Continuous improvement','\n',char(10)),'Productivity,Automation,Workflow',1);
INSERT INTO prompts VALUES(54,'Time Management & Focus Techniques',replace('Master personal time management and deep focus:\n\n**Current Situation:**\n- **Time challenges:** [What''s not working]\n- **Distractions:** [What interrupts you]\n- **Goals:** [What you want to achieve]\n- **Available time:** [How much time you have]\n\n**TIME MANAGEMENT SYSTEM:**\n\n**1. Time Audit:**\n- **Time tracking:** [Track for 1 week]\n  - Work activities\n  - Meeting time\n  - Communication time\n  - Break time\n  - Distraction time\n\n- **Analysis:**\n  - High-value activities\n  - Time wasters\n  - Energy patterns\n  - Peak performance times\n\n**2. Priority Management:**\n- **Eisenhower Matrix:**\n  - Urgent + Important: Do first\n  - Important + Not urgent: Schedule\n  - Urgent + Not important: Delegate\n  - Not urgent + Not important: Eliminate\n\n- **Time blocking:**\n  - Deep work blocks (2-4 hours)\n  - Communication windows\n  - Administrative time\n  - Break periods\n\n**3. Focus Techniques:**\n- **Pomodoro Technique:**\n  - 25 minutes focused work\n  - 5 minute break\n  - Longer break after 4 cycles\n\n- **Deep work practices:**\n  - Distraction elimination\n  - Single-tasking\n  - Environment optimization\n  - Ritual development\n\n**4. Distraction Management:**\n- **Digital distractions:**\n  - Phone in airplane mode\n  - Website blockers\n  - Notification management\n  - App usage limits\n\n- **Environmental setup:**\n  - Dedicated workspace\n  - Noise management\n  - Visual cues\n  - Comfort optimization\n\n**5. Energy Management:**\n- **Energy mapping:**\n  - High energy times\n  - Low energy periods\n  - Recovery needs\n  - Optimal work patterns\n\n- **Task matching:**\n  - Creative work during peak energy\n  - Administrative tasks during low energy\n  - Meetings during moderate energy\n\n**6. Review & Optimization:**\n- Weekly reviews\n- Monthly assessments\n- Quarterly planning\n- System adjustments','\n',char(10)),'Productivity,Time Management,Focus',1);
INSERT INTO prompts VALUES(55,'Cybersecurity Incident Response Plan',replace('Respond effectively to security incidents:\n\n**Incident Information:**\n- **Incident Type:** [Data breach/Malware/Phishing/etc.]\n- **Severity Level:** [Critical/High/Medium/Low]\n- **Discovery Time:** [When detected]\n- **Affected Systems:** [What''s compromised]\n\n**INCIDENT RESPONSE FRAMEWORK:**\n\n**1. Immediate Response (0-1 hour):**\n- **Incident detection & verification:**\n  - Confirm the incident\n  - Assess initial scope\n  - Document evidence\n  - Preserve logs\n\n- **Containment:**\n  - Isolate affected systems\n  - Prevent lateral movement\n  - Preserve evidence\n  - Maintain business continuity\n\n**2. Assessment & Analysis (1-4 hours):**\n- **Impact assessment:**\n  - Data affected\n  - Systems compromised\n  - Business impact\n  - Regulatory implications\n\n- **Root cause analysis:**\n  - Attack vector identification\n  - Timeline reconstruction\n  - Vulnerability assessment\n  - Attribution analysis\n\n**3. Communication (Ongoing):**\n- **Internal notifications:**\n  - Incident response team\n  - Executive leadership\n  - Legal counsel\n  - IT operations\n\n- **External communications:**\n  - Regulatory bodies\n  - Law enforcement\n  - Customers/partners\n  - Media (if required)\n\n**4. Eradication & Recovery:**\n- **Threat removal:**\n  - Malware elimination\n  - Account cleanup\n  - Vulnerability patching\n  - System hardening\n\n- **System restoration:**\n  - Clean backup restoration\n  - System validation\n  - Monitoring enhancement\n  - Gradual service restoration\n\n**5. Post-Incident Activities:**\n- **Lessons learned:**\n  - Incident review\n  - Process improvements\n  - Training updates\n  - Policy revisions\n\n**6. Documentation:**\n- Incident timeline\n- Actions taken\n- Evidence collected\n- Lessons learned\n- Improvement recommendations','\n',char(10)),'Security,Incident,Response',1);
INSERT INTO prompts VALUES(56,'Security Audit & Assessment Framework',replace('Conduct comprehensive security evaluations:\n\n**Audit Scope:**\n- **Systems:** [What to assess]\n- **Timeline:** [Assessment duration]\n- **Compliance:** [Standards to meet]\n- **Risk Level:** [Current threat assessment]\n\n**SECURITY AUDIT FRAMEWORK:**\n\n**1. Pre-Audit Planning:**\n- **Scope definition:**\n  - Systems and applications\n  - Network infrastructure\n  - Data repositories\n  - User access points\n\n- **Methodology selection:**\n  - Automated scanning\n  - Manual testing\n  - Penetration testing\n  - Code review\n\n**2. Technical Assessment:**\n- **Network security:**\n  - Firewall configuration\n  - Network segmentation\n  - Intrusion detection\n  - Wireless security\n\n- **Application security:**\n  - Input validation\n  - Authentication mechanisms\n  - Authorization controls\n  - Data encryption\n\n- **Infrastructure security:**\n  - Server hardening\n  - Patch management\n  - Access controls\n  - Monitoring systems\n\n**3. Policy & Procedure Review:**\n- **Security policies:**\n  - Information security policy\n  - Access control policy\n  - Incident response procedures\n  - Data classification\n\n- **Compliance assessment:**\n  - Regulatory requirements\n  - Industry standards\n  - Internal policies\n  - Best practices\n\n**4. Vulnerability Assessment:**\n- **Vulnerability scanning:**\n  - Automated tools\n  - Manual verification\n  - False positive elimination\n  - Risk prioritization\n\n- **Risk analysis:**\n  - Threat modeling\n  - Impact assessment\n  - Likelihood evaluation\n  - Risk scoring\n\n**5. Reporting:**\n- **Executive summary:**\n  - Overall security posture\n  - Critical findings\n  - Risk assessment\n  - Recommendations\n\n- **Technical details:**\n  - Vulnerability details\n  - Evidence documentation\n  - Remediation steps\n  - Timeline recommendations\n\n**6. Remediation Planning:**\n- Priority-based action plan\n- Resource requirements\n- Timeline and milestones\n- Success metrics','\n',char(10)),'Security,Audit,Assessment',1);
INSERT INTO prompts VALUES(57,'Security Awareness Training Program',replace('Develop comprehensive security awareness training:\n\n**Training Program:**\n- **Target Audience:** [All employees/IT staff/Executives]\n- **Training Goals:** [Security awareness objectives]\n- **Delivery Method:** [Online/In-person/Hybrid]\n- **Duration:** [Program length]\n\n**SECURITY TRAINING FRAMEWORK:**\n\n**1. Training Needs Assessment:**\n- **Current awareness level:**\n  - Security knowledge survey\n  - Phishing simulation results\n  - Incident history analysis\n  - Role-specific risks\n\n- **Training objectives:**\n  - Behavior change goals\n  - Knowledge targets\n  - Skill development\n  - Compliance requirements\n\n**2. Curriculum Development:**\n- **Core topics:**\n  - Password security\n  - Phishing awareness\n  - Social engineering\n  - Data protection\n  - Mobile device security\n  - Remote work security\n\n- **Role-specific training:**\n  - Executive security\n  - IT administrator security\n  - Developer security\n  - HR security\n\n**3. Training Methods:**\n- **Interactive learning:**\n  - Simulated phishing exercises\n  - Security scenarios\n  - Hands-on workshops\n  - Gamification elements\n\n- **Content delivery:**\n  - Microlearning modules\n  - Video tutorials\n  - Interactive presentations\n  - Real-world examples\n\n**4. Implementation Plan:**\n- **Phase 1: Foundation** [Timeline]\n  - Basic security awareness\n  - Password management\n  - Email security\n\n- **Phase 2: Advanced** [Timeline]\n  - Advanced threats\n  - Incident reporting\n  - Role-specific training\n\n**5. Assessment & Reinforcement:**\n- **Knowledge testing:**\n  - Pre/post assessments\n  - Scenario-based questions\n  - Practical exercises\n  - Certification requirements\n\n- **Ongoing reinforcement:**\n  - Monthly security tips\n  - Quarterly updates\n  - Annual refresher training\n  - Incident-based training\n\n**6. Program Evaluation:**\n- Training effectiveness metrics\n- Behavior change indicators\n- Incident reduction tracking\n- Feedback collection\n- Continuous improvement','\n',char(10)),'Security,Training,Awareness',1);
INSERT INTO prompts VALUES(58,'Application Performance Monitoring & Optimization',replace('Monitor and optimize application performance:\n\n**Application Details:**\n- **Application Type:** [Web/Mobile/Desktop/API]\n- **Technology Stack:** [Languages, frameworks, databases]\n- **Current Issues:** [Performance problems]\n- **Performance Goals:** [Target metrics]\n\n**PERFORMANCE OPTIMIZATION FRAMEWORK:**\n\n**1. Performance Baseline:**\n- **Key metrics:**\n  - Response time (avg, p95, p99)\n  - Throughput (requests/second)\n  - Error rate (%)\n  - Resource utilization (CPU, Memory, Disk)\n\n- **Monitoring setup:**\n  - Application Performance Monitoring (APM)\n  - Real User Monitoring (RUM)\n  - Synthetic monitoring\n  - Infrastructure monitoring\n\n**2. Performance Analysis:**\n- **Frontend performance:**\n  - Page load times\n  - Time to first byte (TTFB)\n  - First contentful paint (FCP)\n  - Largest contentful paint (LCP)\n  - Cumulative layout shift (CLS)\n\n- **Backend performance:**\n  - API response times\n  - Database query performance\n  - Cache hit rates\n  - Memory usage patterns\n\n**3. Optimization Strategies:**\n- **Code optimization:**\n  - Algorithm improvements\n  - Database query optimization\n  - Caching strategies\n  - Asynchronous processing\n\n- **Infrastructure optimization:**\n  - Load balancing\n  - CDN implementation\n  - Database indexing\n  - Resource scaling\n\n**4. Performance Testing:**\n- **Load testing:** [Normal traffic simulation]\n- **Stress testing:** [Peak traffic simulation]\n- **Spike testing:** [Sudden traffic increases]\n- **Volume testing:** [Large data sets]\n\n**5. Monitoring & Alerting:**\n- **Performance dashboards:**\n  - Real-time metrics\n  - Historical trends\n  - Comparative analysis\n  - Business impact correlation\n\n- **Alert configuration:**\n  - Threshold-based alerts\n  - Anomaly detection\n  - Escalation procedures\n  - Notification channels\n\n**6. Continuous Improvement:**\n- Regular performance reviews\n- Optimization roadmap\n- Performance budgets\n- Team training','\n',char(10)),'Performance,Monitoring,Optimization',1);
INSERT INTO prompts VALUES(59,'Database Performance Tuning Guide',replace('Optimize database performance and efficiency:\n\n**Database Information:**\n- **Database Type:** [MySQL/PostgreSQL/MongoDB/etc.]\n- **Database Size:** [Data volume]\n- **Query Volume:** [Queries per second]\n- **Performance Issues:** [Current problems]\n\n**DATABASE PERFORMANCE FRAMEWORK:**\n\n**1. Performance Assessment:**\n- **Current metrics:**\n  - Query response times\n  - Connection pool usage\n  - Lock wait times\n  - Buffer hit ratios\n  - Disk I/O patterns\n\n- **Bottleneck identification:**\n  - Slow queries\n  - Resource contention\n  - Index inefficiencies\n  - Configuration issues\n\n**2. Query Optimization:**\n- **Query analysis:**\n  - Execution plan review\n  - Query complexity assessment\n  - Join optimization\n  - Subquery optimization\n\n- **Index strategy:**\n  - Index usage analysis\n  - Missing index identification\n  - Composite index design\n  - Index maintenance\n\n**3. Schema Optimization:**\n- **Table design:**\n  - Normalization vs. denormalization\n  - Data type optimization\n  - Partitioning strategies\n  - Archive strategies\n\n- **Relationship optimization:**\n  - Foreign key design\n  - Join table optimization\n  - Referential integrity\n\n**4. Configuration Tuning:**\n- **Memory allocation:**\n  - Buffer pool sizing\n  - Cache configuration\n  - Connection limits\n  - Work memory settings\n\n- **Storage optimization:**\n  - Disk configuration\n  - File system selection\n  - I/O optimization\n  - Backup strategies\n\n**5. Monitoring & Maintenance:**\n- **Performance monitoring:**\n  - Query performance tracking\n  - Resource utilization\n  - Lock monitoring\n  - Replication lag\n\n- **Maintenance tasks:**\n  - Statistics updates\n  - Index rebuilding\n  - Data cleanup\n  - Performance reviews\n\n**6. Scaling Strategies:**\n- Read replicas\n- Sharding approaches\n- Connection pooling\n- Caching layers','\n',char(10)),'Performance,Database,Optimization',1);
INSERT INTO prompts VALUES(60,'System Architecture Design & Documentation',replace('Design and document system architecture:\n\n**System Requirements:**\n- **System Purpose:** [What the system does]\n- **Scale Requirements:** [Users, data, transactions]\n- **Performance Requirements:** [Response time, throughput]\n- **Reliability Requirements:** [Uptime, disaster recovery]\n\n**ARCHITECTURE DESIGN FRAMEWORK:**\n\n**1. Requirements Analysis:**\n- **Functional requirements:**\n  - Core features and capabilities\n  - User workflows\n  - Business logic\n  - Integration needs\n\n- **Non-functional requirements:**\n  - Performance (latency, throughput)\n  - Scalability (horizontal, vertical)\n  - Reliability (availability, fault tolerance)\n  - Security (authentication, authorization)\n\n**2. Architecture Patterns:**\n- **Architectural styles:**\n  - Monolithic architecture\n  - Microservices architecture\n  - Service-oriented architecture (SOA)\n  - Event-driven architecture\n\n- **Design patterns:**\n  - Model-View-Controller (MVC)\n  - Repository pattern\n  - Command Query Responsibility Segregation (CQRS)\n  - Event sourcing\n\n**3. System Components:**\n- **Frontend layer:**\n  - User interface components\n  - Client-side logic\n  - State management\n  - API integration\n\n- **Backend layer:**\n  - Application services\n  - Business logic\n  - Data access layer\n  - External integrations\n\n- **Data layer:**\n  - Database design\n  - Data modeling\n  - Storage strategy\n  - Backup and recovery\n\n**4. Technology Stack:**\n- **Programming languages:** [Selection criteria]\n- **Frameworks and libraries:** [Justification]\n- **Databases:** [Relational vs. NoSQL]\n- **Infrastructure:** [Cloud vs. on-premise]\n\n**5. Architecture Documentation:**\n- **System overview diagram**\n- **Component diagrams**\n- **Sequence diagrams**\n- **Deployment diagrams**\n- **Data flow diagrams**\n\n**6. Quality Attributes:**\n- **Scalability planning**\n- **Security considerations**\n- **Performance optimization**\n- **Maintainability factors**\n- **Testability requirements**','\n',char(10)),'Architecture,Design,Documentation',1);
INSERT INTO prompts VALUES(61,'Cloud Architecture Best Practices',replace('Design scalable and resilient cloud architectures:\n\n**Cloud Project:**\n- **Cloud Provider:** [AWS/Azure/GCP]\n- **Application Type:** [Web app/API/Data pipeline]\n- **Scale Requirements:** [Expected load]\n- **Budget Constraints:** [Cost considerations]\n\n**CLOUD ARCHITECTURE FRAMEWORK:**\n\n**1. Cloud-Native Design Principles:**\n- **Scalability:**\n  - Horizontal scaling (auto-scaling groups)\n  - Vertical scaling (instance sizing)\n  - Load distribution\n  - Resource elasticity\n\n- **Resilience:**\n  - Multi-availability zone deployment\n  - Fault tolerance design\n  - Circuit breaker patterns\n  - Graceful degradation\n\n**2. Service Architecture:**\n- **Compute services:**\n  - Containerization (Docker/Kubernetes)\n  - Serverless functions (Lambda/Functions)\n  - Virtual machines (EC2/VMs)\n  - Managed services\n\n- **Storage solutions:**\n  - Object storage (S3/Blob Storage)\n  - Database services (RDS/Cloud SQL)\n  - Caching layers (Redis/Memcached)\n  - Content delivery networks (CDN)\n\n**3. Security Architecture:**\n- **Identity and access management:**\n  - Role-based access control (RBAC)\n  - Multi-factor authentication\n  - Service accounts\n  - API key management\n\n- **Network security:**\n  - Virtual private clouds (VPC)\n  - Security groups/firewalls\n  - SSL/TLS encryption\n  - DDoS protection\n\n**4. Monitoring & Observability:**\n- **Logging strategy:**\n  - Centralized logging\n  - Log aggregation\n  - Log retention policies\n  - Security logging\n\n- **Monitoring setup:**\n  - Application metrics\n  - Infrastructure monitoring\n  - Alerting configuration\n  - Dashboard creation\n\n**5. Cost Optimization:**\n- **Resource optimization:**\n  - Right-sizing instances\n  - Reserved instances\n  - Spot instances\n  - Auto-scaling policies\n\n- **Cost monitoring:**\n  - Budget alerts\n  - Cost allocation tags\n  - Usage analytics\n  - Optimization recommendations\n\n**6. Deployment Strategy:**\n- **CI/CD pipeline:**\n  - Infrastructure as code\n  - Automated testing\n  - Blue-green deployments\n  - Rollback procedures\n\n**7. Disaster Recovery:**\n- Backup strategies\n- Cross-region replication\n- Recovery time objectives (RTO)\n- Recovery point objectives (RPO)','\n',char(10)),'Architecture,Cloud,Best Practices',1);
INSERT INTO prompts VALUES(62,'CI/CD Pipeline Implementation Guide',replace('Implement continuous integration and deployment:\n\n**Project Information:**\n- **Application Type:** [Web app/API/Mobile app]\n- **Technology Stack:** [Languages, frameworks]\n- **Deployment Target:** [Cloud/On-premise/Hybrid]\n- **Team Size:** [Number of developers]\n\n**CI/CD IMPLEMENTATION FRAMEWORK:**\n\n**1. Source Code Management:**\n- **Repository strategy:**\n  - Branching model (GitFlow/GitHub Flow)\n  - Code review process\n  - Merge policies\n  - Branch protection rules\n\n- **Code quality gates:**\n  - Automated code formatting\n  - Static code analysis\n  - Security scanning\n  - Dependency vulnerability checks\n\n**2. Continuous Integration (CI):**\n- **Build automation:**\n  - Automated builds on commit\n  - Build artifact generation\n  - Build status notifications\n  - Build history tracking\n\n- **Testing automation:**\n  - Unit test execution\n  - Integration test runs\n  - Code coverage reporting\n  - Test result notifications\n\n**3. Continuous Deployment (CD):**\n- **Deployment stages:**\n  - Development environment\n  - Staging/QA environment\n  - Production environment\n  - Rollback procedures\n\n- **Deployment strategies:**\n  - Blue-green deployments\n  - Canary releases\n  - Rolling deployments\n  - Feature flags\n\n**4. Infrastructure as Code (IaC):**\n- **Infrastructure automation:**\n  - Environment provisioning\n  - Configuration management\n  - Infrastructure versioning\n  - Environment consistency\n\n- **Tools and platforms:**\n  - Terraform/CloudFormation\n  - Ansible/Chef/Puppet\n  - Docker/Kubernetes\n  - Cloud platforms\n\n**5. Monitoring & Observability:**\n- **Pipeline monitoring:**\n  - Build success rates\n  - Deployment frequency\n  - Lead time metrics\n  - Failure recovery time\n\n- **Application monitoring:**\n  - Performance metrics\n  - Error tracking\n  - Log aggregation\n  - Alerting systems\n\n**6. Security Integration:**\n- **Security scanning:**\n  - SAST (Static Application Security Testing)\n  - DAST (Dynamic Application Security Testing)\n  - Container security scanning\n  - Infrastructure security checks\n\n**7. Team Collaboration:**\n- **Communication:**\n  - Build notifications\n  - Deployment announcements\n  - Incident alerts\n  - Status dashboards\n\n**8. Continuous Improvement:**\n- Pipeline optimization\n- Feedback collection\n- Metrics analysis\n- Process refinement','\n',char(10)),'DevOps,CI/CD,Automation',1);
INSERT INTO prompts VALUES(63,'Infrastructure Monitoring & Alerting Strategy',replace('Implement comprehensive infrastructure monitoring:\n\n**Infrastructure Scope:**\n- **Environment:** [Production/Staging/Development]\n- **Infrastructure Type:** [Cloud/On-premise/Hybrid]\n- **Scale:** [Number of servers/services]\n- **Criticality:** [Business impact level]\n\n**MONITORING STRATEGY FRAMEWORK:**\n\n**1. Monitoring Architecture:**\n- **Monitoring layers:**\n  - Infrastructure layer (servers, networks)\n  - Platform layer (containers, orchestration)\n  - Application layer (services, APIs)\n  - User experience layer (frontend, mobile)\n\n- **Data collection:**\n  - Metrics collection (time-series data)\n  - Log aggregation (structured/unstructured)\n  - Trace collection (distributed tracing)\n  - Event streaming (real-time events)\n\n**2. Key Metrics & KPIs:**\n- **Infrastructure metrics:**\n  - CPU utilization (%)\n  - Memory usage (%)\n  - Disk space and I/O\n  - Network throughput\n  - System load average\n\n- **Application metrics:**\n  - Response times (avg, p95, p99)\n  - Request rates (req/sec)\n  - Error rates (%)\n  - Availability (uptime %)\n\n**3. Alerting Strategy:**\n- **Alert types:**\n  - Threshold-based alerts\n  - Anomaly detection alerts\n  - Composite condition alerts\n  - Predictive alerts\n\n- **Alert severity levels:**\n  - Critical: Immediate response required\n  - High: Response within 1 hour\n  - Medium: Response within 4 hours\n  - Low: Response within 24 hours\n\n**4. Monitoring Tools:**\n- **Infrastructure monitoring:**\n  - Prometheus + Grafana\n  - Datadog/New Relic\n  - CloudWatch/Azure Monitor\n  - Nagios/Zabbix\n\n- **Log management:**\n  - ELK Stack (Elasticsearch, Logstash, Kibana)\n  - Splunk\n  - Fluentd/Fluent Bit\n  - Cloud logging services\n\n**5. Dashboard Design:**\n- **Executive dashboards:**\n  - High-level KPIs\n  - Business impact metrics\n  - SLA compliance\n  - Cost optimization\n\n- **Operational dashboards:**\n  - Real-time system status\n  - Performance trends\n  - Capacity planning\n  - Incident tracking\n\n**6. Incident Response Integration:**\n- **Alert routing:**\n  - On-call schedules\n  - Escalation procedures\n  - Communication channels\n  - Incident management tools\n\n**7. Capacity Planning:**\n- **Trend analysis:**\n  - Resource utilization trends\n  - Growth projections\n  - Scaling recommendations\n  - Cost forecasting\n\n**8. Continuous Improvement:**\n- Alert tuning and optimization\n- False positive reduction\n- Monitoring coverage gaps\n- Tool evaluation and updates','\n',char(10)),'DevOps,Monitoring,Infrastructure',1);
INSERT INTO prompts VALUES(64,'Container Orchestration & Kubernetes Management',replace('Manage containerized applications with Kubernetes:\n\n**Container Environment:**\n- **Application Type:** [Microservices/Monolith/Batch jobs]\n- **Scale Requirements:** [Number of services/pods]\n- **Environment:** [Development/Staging/Production]\n- **Team Experience:** [Kubernetes expertise level]\n\n**KUBERNETES MANAGEMENT FRAMEWORK:**\n\n**1. Cluster Architecture:**\n- **Cluster design:**\n  - Multi-node cluster setup\n  - High availability configuration\n  - Network policy design\n  - Storage class configuration\n\n- **Node management:**\n  - Node pools and taints\n  - Resource allocation\n  - Auto-scaling configuration\n  - Maintenance procedures\n\n**2. Application Deployment:**\n- **Workload types:**\n  - Deployments (stateless apps)\n  - StatefulSets (stateful apps)\n  - DaemonSets (node agents)\n  - Jobs and CronJobs (batch work)\n\n- **Configuration management:**\n  - ConfigMaps (configuration data)\n  - Secrets (sensitive data)\n  - Environment variables\n  - Volume mounts\n\n**3. Service Discovery & Networking:**\n- **Service types:**\n  - ClusterIP (internal communication)\n  - NodePort (external access)\n  - LoadBalancer (cloud integration)\n  - Ingress (HTTP/HTTPS routing)\n\n- **Network policies:**\n  - Pod-to-pod communication\n  - Namespace isolation\n  - External traffic control\n  - Security policies\n\n**4. Storage Management:**\n- **Storage solutions:**\n  - Persistent Volumes (PV)\n  - Persistent Volume Claims (PVC)\n  - Storage classes\n  - Dynamic provisioning\n\n- **Data management:**\n  - Backup strategies\n  - Data migration\n  - Volume snapshots\n  - Disaster recovery\n\n**5. Security & RBAC:**\n- **Access control:**\n  - Role-Based Access Control (RBAC)\n  - Service accounts\n  - Pod security policies\n  - Network security\n\n- **Security scanning:**\n  - Container image scanning\n  - Runtime security\n  - Compliance monitoring\n  - Vulnerability management\n\n**6. Monitoring & Observability:**\n- **Cluster monitoring:**\n  - Resource utilization\n  - Pod health status\n  - Node performance\n  - Event monitoring\n\n- **Application monitoring:**\n  - Application metrics\n  - Distributed tracing\n  - Log aggregation\n  - Performance monitoring\n\n**7. GitOps & CI/CD Integration:**\n- **Deployment automation:**\n  - GitOps workflows\n  - Helm chart management\n  - Automated rollouts\n  - Rollback procedures\n\n**8. Troubleshooting & Maintenance:**\n- **Common issues:**\n  - Pod startup failures\n  - Resource constraints\n  - Network connectivity\n  - Storage issues\n\n- **Maintenance tasks:**\n  - Cluster upgrades\n  - Node maintenance\n  - Certificate rotation\n  - Backup verification','\n',char(10)),NULL,NULL);
INSERT INTO prompts VALUES(65,'Responsive Navigation Bar Guide - CSS Grid and Flexbox','Create a comprehensive responsive navigation bar using modern CSS techniques with Grid and Flexbox layouts.','Web Dev,CSS,Responsive Design,Navigation,Frontend,Grid,Flexbox',1);
INSERT INTO prompts VALUES(66,'JavaScript Form Validation Function','Build a comprehensive form validation system using vanilla JavaScript with real-time validation.','Web Dev,JavaScript,Form Validation,Frontend,User Experience,Accessibility',1);
INSERT INTO prompts VALUES(67,'React.js Boilerplate with React Router','Create a production-ready React.js boilerplate with routing, testing, and modern development practices.','Web Dev,React,React Router,Boilerplate,JavaScript,Frontend,SPA',1);
INSERT INTO prompts VALUES(68,'Performance Optimization Audit','Conduct a comprehensive performance audit of a website. Analyze loading times, identify bottlenecks, and provide specific optimization recommendations including image compression, code minification, CDN implementation, and caching strategies.','Web Dev,Performance,Optimization',1);
INSERT INTO prompts VALUES(69,'E-commerce Site Redesign','Design a modern, conversion-focused e-commerce website. Include user experience improvements, mobile responsiveness, payment integration, product filtering, shopping cart functionality, and checkout optimization.','Web Dev,E-commerce,Design',1);
INSERT INTO prompts VALUES(70,'React Component Boilerplate','Create a reusable React component boilerplate with TypeScript, proper prop types, error boundaries, testing setup with Jest, Storybook integration, and comprehensive documentation.','Web Dev,React,TypeScript',1);
INSERT INTO prompts VALUES(71,'CSS Grid Layout System','Build a flexible CSS Grid layout system for complex web designs. Include responsive breakpoints, grid templates, auto-placement, and fallbacks for older browsers.','Web Dev,CSS,Grid',1);
INSERT INTO prompts VALUES(72,'API Integration Best Practices','Implement robust API integration with error handling, loading states, data caching, retry logic, and proper authentication. Include examples for REST and GraphQL APIs.','Web Dev,API,Integration',1);
INSERT INTO prompts VALUES(73,'Webpack Configuration Setup','Create an optimized Webpack configuration for modern web development. Include code splitting, tree shaking, hot module replacement, and production optimizations.','Web Dev,Webpack,Build Tools',1);
INSERT INTO prompts VALUES(74,'Progressive Web App Implementation','Convert a website into a Progressive Web App (PWA) with service workers, offline functionality, push notifications, and app manifest for installation.','Web Dev,PWA,Service Workers',1);
INSERT INTO prompts VALUES(75,'Node.js Authentication System','Build a secure authentication system using Node.js with JWT tokens, password hashing, email verification, role-based access control, and session management.','Web Dev,Node.js,Authentication',1);
INSERT INTO prompts VALUES(76,'SEO Optimization Strategy','Develop a comprehensive SEO strategy for web applications. Include meta tags, structured data, sitemap generation, page speed optimization, and Core Web Vitals improvements.','Web Dev,SEO,Optimization',1);
INSERT INTO prompts VALUES(77,'Portfolio Website Template','Create a stunning portfolio website template for developers and designers. Include project showcases, skills section, contact forms, and smooth animations using modern CSS and JavaScript.','Web Dev,Portfolio,Template',1);
INSERT INTO prompts VALUES(78,'Cross-Browser Compatibility','Ensure cross-browser compatibility for web applications. Test and fix issues across Chrome, Firefox, Safari, and Edge. Include polyfills and graceful degradation strategies.','Web Dev,Browser,Compatibility',1);
INSERT INTO prompts VALUES(79,'WordPress to Static Site Migration','Migrate a WordPress site to a static site generator (Gatsby, Next.js, or Nuxt.js). Preserve SEO, migrate content, implement CMS integration, and optimize performance.','Web Dev,WordPress,Migration',1);
INSERT INTO prompts VALUES(80,'Tailwind CSS Integration','Integrate Tailwind CSS into a project with custom configuration, component extraction, responsive design patterns, and optimization for production builds.','Web Dev,Tailwind,CSS',1);
INSERT INTO prompts VALUES(81,'GitHub Pages Deployment','Set up automated deployment to GitHub Pages with GitHub Actions. Include build optimization, custom domain configuration, and continuous integration workflows.','Web Dev,GitHub,Deployment',1);
INSERT INTO prompts VALUES(82,'Real-time Chat Application','Build a real-time chat application using WebSockets (Socket.io). Include user authentication, message persistence, typing indicators, and emoji support.','Web Dev,WebSockets,Chat',1);
INSERT INTO prompts VALUES(83,'HTTPS and Security Setup','Implement HTTPS and security best practices for web applications. Include SSL certificate setup, security headers, CSRF protection, and content security policy.','Web Dev,Security,HTTPS',1);
INSERT INTO prompts VALUES(84,'React Component Library','Create a reusable React component library with Storybook, TypeScript, automated testing, and npm publishing. Include design system principles and documentation.','Web Dev,React,Components',1);
INSERT INTO prompts VALUES(85,'Stripe Payment Integration','Integrate Stripe payment processing into a web application. Include payment forms, subscription handling, webhook implementation, and error handling.','Web Dev,Payments,Stripe',1);
INSERT INTO prompts VALUES(86,'GraphQL API Development','Build a GraphQL API with proper schema design, resolvers, data loading optimization, authentication, and real-time subscriptions using Apollo Server.','Web Dev,GraphQL,API',1);
INSERT INTO prompts VALUES(87,'WebAssembly Integration','Integrate WebAssembly (WASM) into a web application for performance-critical operations. Include compilation from C/C++ or Rust, and JavaScript interoperability.','Web Dev,WebAssembly,Performance',1);
INSERT INTO prompts VALUES(88,'Headless CMS Implementation','Implement a headless CMS solution (Strapi, Contentful, or Sanity) with a modern frontend framework. Include content modeling, API integration, and deployment strategies.','Web Dev,CMS,Headless',1);
INSERT INTO prompts VALUES(89,'Custom React Hooks','Create a collection of custom React hooks for common functionality: useLocalStorage, useAPI, useDebounce, useIntersectionObserver, and useMediaQuery with TypeScript support.','Web Dev,React,Hooks',1);
INSERT INTO prompts VALUES(90,'Comprehensive Web Application Test Plan','Create a comprehensive test plan for testing a web application, covering functional, non-functional, and performance aspects. Include test objectives, scope, methodologies, test environments, entry/exit criteria, and deliverables.','Code Quality,Testing,QA',1);
INSERT INTO prompts VALUES(91,'Selenium Regression Testing Script','Write a script to automate regression testing for a new feature added to a web application using Selenium and Python. Include setup, test data management, assertions, reporting, and integration with CI/CD pipelines.','Code Quality,Selenium,Automation',1);
INSERT INTO prompts VALUES(92,'Mobile Security Testing Checklist','Develop a checklist for performing security testing on a mobile application, ensuring data encryption and secure communication. Cover authentication, data storage, network security, and compliance requirements.','Code Quality,Security,Mobile',1);
INSERT INTO prompts VALUES(93,'API Testing Automation Suite','Assist in creating a suite of automated tests to verify that API endpoints return the correct status codes and data in JSON format. Include validation, error handling, performance testing, and documentation.','Code Quality,API,Testing',1);
INSERT INTO prompts VALUES(94,'Jenkins CI Pipeline for Java Testing','Write a guide to setting up a continuous integration pipeline with Jenkins to automate the execution of unit tests for a Java project. Include Maven/Gradle integration, test reporting, and failure notifications.','Code Quality,Jenkins,Java',1);
INSERT INTO prompts VALUES(95,'Cross-Browser Compatibility Test Cases','Generate test cases to verify cross-browser compatibility for a new web design, ensuring it works on Chrome, Firefox, Safari, and Edge. Include responsive design, JavaScript functionality, and CSS rendering tests.','Code Quality,Cross-Browser,Testing',1);
INSERT INTO prompts VALUES(96,'JMeter Load Testing for E-commerce','Create a load testing script for an e-commerce platform using JMeter to simulate user traffic and analyze performance under stress. Include user scenarios, ramp-up strategies, and performance metrics analysis.','Code Quality,JMeter,Performance',1);
INSERT INTO prompts VALUES(97,'Playwright React Testing Framework','Assist in developing an automated test framework using Playwright to test a React web application''s user interface. Include component testing, visual regression testing, and parallel execution strategies.','Code Quality,Playwright,React',1);
INSERT INTO prompts VALUES(98,'Security Scans in CI/CD Pipeline','Write a tutorial for integrating security scans into a CI/CD pipeline to ensure code is free of vulnerabilities before deployment. Include SAST, DAST, dependency scanning, and vulnerability management.','Code Quality,Security,CI/CD',1);
INSERT INTO prompts VALUES(99,'User Acceptance Testing Strategy','Develop a strategy for performing user acceptance testing (UAT) for a new mobile app, gathering feedback from real users. Include test planning, user recruitment, feedback collection, and result analysis.','Code Quality,UAT,Mobile',1);
INSERT INTO prompts VALUES(100,'Automated Performance Testing Plan','Create a plan for automated performance testing of a website to ensure it handles heavy traffic during sales or promotions. Include monitoring, alerting, scalability testing, and optimization strategies.','Code Quality,Performance,Automation',1);
INSERT INTO prompts VALUES(101,'Cloud Application Scalability Testing','Write a guide for testing a cloud-based application for scalability and redundancy, ensuring it performs well during high-demand periods. Include load balancing, auto-scaling, and disaster recovery testing.','Code Quality,Cloud,Scalability',1);
INSERT INTO prompts VALUES(102,'Mobile Parallel Testing Environment','Assist in setting up a test environment for running parallel tests across multiple devices in a mobile testing suite. Include device management, test distribution, and result aggregation strategies.','Code Quality,Mobile,Parallel Testing',1);
INSERT INTO prompts VALUES(103,'Bug Tracking and Reporting System','Develop a method for tracking and reporting bugs effectively in a team of developers, ensuring clear communication and quick resolutions. Include workflow, severity classification, and integration with development tools.','Code Quality,Bug Tracking,Team',1);
INSERT INTO prompts VALUES(104,'Login Functionality Testing Script','Write a script for testing the login functionality of a web app, verifying the behavior for different types of users (admin, guest, registered). Include security validation, session management, and error handling.','Code Quality,Authentication,Testing',1);
INSERT INTO prompts VALUES(105,'Customer Profile API Test Cases','Create a test case for validating an API that retrieves and updates data for a customer profile, ensuring the system is fault-tolerant. Include data validation, error scenarios, and recovery testing.','Code Quality,API,Customer Data',1);
INSERT INTO prompts VALUES(106,'Machine Learning Model Testing','Explain the process for testing machine learning models to ensure their accuracy and performance before deployment. Include data validation, model evaluation metrics, A/B testing, and monitoring strategies.','Code Quality,ML,Testing',1);
INSERT INTO prompts VALUES(107,'E-commerce End-to-End Testing Plan','Write a plan for conducting an end-to-end test of an order processing system for an e-commerce site, including inventory and shipping. Cover user journeys, data flow validation, and integration testing.','Code Quality,E-commerce,End-to-End',1);
INSERT INTO prompts VALUES(108,'Mobile UX Testing Checklist','Develop a checklist for testing the usability and user experience (UX) of a mobile application, ensuring it meets user expectations. Include accessibility, navigation, performance, and user satisfaction metrics.','Code Quality,UX,Mobile',1);
INSERT INTO prompts VALUES(109,'API Load Testing Automation','Assist in automating load testing for an API to ensure it can handle a large number of concurrent users without crashing. Include stress testing, spike testing, and performance monitoring strategies.','Code Quality,API,Load Testing',1);
INSERT INTO prompts VALUES(110,'Flask on AWS Elastic Beanstalk Deployment','Write a guide for deploying a Python Flask web application on AWS using Elastic Beanstalk. Include environment configuration, application structure, requirements.txt setup, deployment commands, and troubleshooting common issues.','DevOps,AWS,Python,Flask',1);
INSERT INTO prompts VALUES(111,'Terraform AWS Infrastructure Automation','Develop a script for automating server provisioning using Terraform for AWS infrastructure. Include VPC setup, EC2 instances, security groups, load balancers, and state management best practices.','DevOps,Terraform,AWS,Infrastructure',1);
INSERT INTO prompts VALUES(112,'Jenkins CI/CD Pipeline for Node.js','Create a CI/CD pipeline using Jenkins for continuous integration and deployment of a Node.js application. Include build stages, testing, artifact management, deployment strategies, and rollback procedures.','DevOps,Jenkins,Node.js,CI/CD',1);
INSERT INTO prompts VALUES(113,'Kubernetes EKS Cluster Setup','Set up a Kubernetes cluster on AWS using EKS and deploy a containerized application. Include cluster configuration, node groups, networking, ingress controllers, and application deployment with YAML manifests.','DevOps,Kubernetes,AWS,EKS',1);
INSERT INTO prompts VALUES(114,'AWS Lambda S3 Data Processing','Create an AWS Lambda function using Python to process incoming data from an S3 bucket. Include event triggers, data processing logic, error handling, logging, and integration with other AWS services.','DevOps,AWS,Lambda,Python',1);
INSERT INTO prompts VALUES(115,'CloudWatch Application Monitoring','Write a script to monitor the health of a cloud-based application on AWS using CloudWatch and send alerts. Include custom metrics, alarms, SNS notifications, and dashboard creation for comprehensive monitoring.','DevOps,AWS,CloudWatch,Monitoring',1);
INSERT INTO prompts VALUES(116,'Docker Compose Multi-Container Setup','Develop a Docker Compose file to run a multi-container application with a Node.js backend and MongoDB. Include service definitions, networking, volumes, environment variables, and development workflow optimization.','DevOps,Docker,Node.js,MongoDB',1);
INSERT INTO prompts VALUES(117,'GitLab CI Google Cloud Deployment','Set up a GitLab CI pipeline to automate the deployment of an application to Google Cloud Platform. Include build stages, testing, artifact storage, GCP authentication, and deployment to Cloud Run or GKE.','DevOps,GitLab,GCP,CI/CD',1);
INSERT INTO prompts VALUES(118,'Ansible EC2 Configuration Playbook','Create an Ansible playbook to configure web servers on multiple EC2 instances in AWS. Include inventory management, role-based configurations, package installation, service management, and security hardening.','DevOps,Ansible,AWS,EC2',1);
INSERT INTO prompts VALUES(119,'Terraform S3 Bucket Provisioning','Write a Terraform script to provision an AWS S3 bucket and enable versioning and encryption. Include bucket policies, lifecycle rules, access logging, and integration with other AWS services for security and compliance.','DevOps,Terraform,AWS,S3',1);
INSERT INTO prompts VALUES(120,'AWS Auto Scaling Groups Setup','Develop a solution for creating auto-scaling groups in AWS to ensure your application scales based on traffic. Include launch templates, scaling policies, health checks, load balancer integration, and cost optimization strategies.','DevOps,AWS,Auto Scaling,Load Balancing',1);
INSERT INTO prompts VALUES(121,'Jenkins Azure Web App Deployment','Assist in configuring a Jenkins pipeline that deploys a web app to an Azure Web App service. Include Azure CLI integration, authentication, deployment slots, configuration management, and monitoring setup.','DevOps,Jenkins,Azure,Web Apps',1);
INSERT INTO prompts VALUES(122,'Kubernetes Helm Charts Guide','Write a guide for configuring Kubernetes Helm charts to deploy a scalable microservices application. Include chart structure, values configuration, dependencies, templating, and best practices for production deployments.','DevOps,Kubernetes,Helm,Microservices',1);
INSERT INTO prompts VALUES(123,'AWS RDS Database Backup Automation','Create a script to automate the backup of databases in the cloud using AWS RDS and S3. Include automated snapshots, cross-region replication, backup retention policies, and disaster recovery procedures.','DevOps,AWS,RDS,Backup',1);
INSERT INTO prompts VALUES(124,'GitOps with ArgoCD Implementation','Design an approach for managing and automating infrastructure using GitOps with tools like ArgoCD. Include Git repository structure, application definitions, sync policies, multi-environment management, and security considerations.','DevOps,GitOps,ArgoCD,Kubernetes',1);
INSERT INTO prompts VALUES(125,'React Component Unit Testing','Write comprehensive unit tests for a React component using Jest and React Testing Library. Include testing props, state changes, user interactions, and edge cases.','Unit Tests,React,Testing,Code Quality',1);
INSERT INTO prompts VALUES(126,'Python Function Unit Testing','Create unit tests for Python functions using pytest. Include test fixtures, parameterized tests, mocking dependencies, and assertion best practices.','Unit Tests,Python,Testing,Code Quality',1);
INSERT INTO prompts VALUES(127,'Node.js API Unit Testing','Develop unit tests for Node.js API endpoints using Jest and supertest. Include testing different HTTP methods, authentication, error handling, and database mocking.','Unit Tests,Node.js,API,Testing',1);
INSERT INTO prompts VALUES(128,'Database Integration Testing','Create integration tests for database operations including CRUD operations, transactions, and data validation. Include test data setup and cleanup strategies.','Integration Tests,Database,Testing,Code Quality',1);
INSERT INTO prompts VALUES(129,'API Integration Testing Suite','Build a comprehensive integration testing suite for REST APIs. Include testing endpoint interactions, data flow, authentication, and third-party service integrations.','Integration Tests,API,Testing,Code Quality',1);
INSERT INTO prompts VALUES(130,'Microservices Integration Testing','Design integration tests for microservices architecture. Include service-to-service communication, message queues, and end-to-end workflow testing.','Integration Tests,Microservices,Testing,Architecture',1);
INSERT INTO prompts VALUES(131,'JavaScript Debugging Techniques','Master JavaScript debugging using browser DevTools, console methods, breakpoints, and performance profiling. Include debugging async code and React applications.','Debugging,JavaScript,Development,Code Quality',1);
INSERT INTO prompts VALUES(132,'Python Debugging with pdb','Learn effective Python debugging using pdb, IDE debuggers, and logging. Include debugging techniques for web applications, scripts, and complex data structures.','Debugging,Python,Development,Code Quality',1);
INSERT INTO prompts VALUES(133,'Production Issue Debugging Guide','Develop a systematic approach to debugging production issues. Include log analysis, performance monitoring, error tracking, and rollback strategies.','Debugging,Production,Monitoring,Troubleshooting',1);
INSERT INTO prompts VALUES(134,'Code Refactoring Best Practices','Learn systematic code refactoring techniques to improve code quality, readability, and maintainability. Include identifying code smells and applying refactoring patterns.','Refactoring,Code Quality,Best Practices,Development',1);
INSERT INTO prompts VALUES(135,'Legacy Code Refactoring Strategy','Develop a strategy for safely refactoring legacy codebases. Include risk assessment, testing strategies, incremental improvements, and team coordination.','Refactoring,Legacy,Strategy,Code Quality',1);
INSERT INTO prompts VALUES(136,'Database Schema Refactoring','Plan and execute database schema refactoring including table restructuring, index optimization, and data migration while maintaining system availability.','Refactoring,Database,Migration,Optimization',1);
INSERT INTO prompts VALUES(137,'Git Workflow and Branching Strategy','Implement effective Git workflows including feature branches, pull requests, code reviews, and release management. Include GitFlow and GitHub Flow strategies.','Git,Version Control,Workflow,Development',1);
INSERT INTO prompts VALUES(138,'Git Conflict Resolution Guide','Master Git merge conflict resolution including understanding conflict markers, using merge tools, and preventing conflicts through better collaboration practices.','Git,Version Control,Collaboration,Development',1);
INSERT INTO prompts VALUES(139,'Advanced Git Techniques','Learn advanced Git techniques including interactive rebase, cherry-picking, bisect for debugging, hooks, and repository maintenance best practices.','Git,Version Control,Development,Best Practices',1);
INSERT INTO prompts VALUES(140,'Version Control Best Practices','Establish version control best practices for teams including commit message conventions, branching strategies, and repository organization.','Version Control,Best Practices,Team,Development',1);
INSERT INTO prompts VALUES(141,'Monorepo Version Control Strategy','Design version control strategies for monorepo projects including dependency management, build optimization, and deployment coordination across multiple services.','Version Control,Monorepo,Architecture,Development',1);
INSERT INTO prompts VALUES(142,'Version Control for Data Science','Implement version control for data science projects including data versioning, model versioning, and experiment tracking using tools like DVC and MLflow.','Version Control,Data Science,ML,Development',1);
INSERT INTO prompts VALUES(143,'Robust Error Handling in JavaScript','Implement comprehensive error handling in JavaScript applications including try-catch blocks, Promise error handling, and global error handlers.','Error Handling,JavaScript,Development,Best Practices',1);
INSERT INTO prompts VALUES(144,'Python Exception Handling Best Practices','Design effective exception handling in Python applications including custom exceptions, logging, and graceful degradation strategies.','Error Handling,Python,Development,Best Practices',1);
INSERT INTO prompts VALUES(145,'API Error Handling and Response Design','Create consistent API error handling including HTTP status codes, error response formats, logging, and client-friendly error messages.','Error Handling,API,Development,Best Practices',1);
INSERT INTO prompts VALUES(146,'Comprehensive README Template','Create a professional README template including project description, installation instructions, usage examples, contributing guidelines, and licensing information.','README,Documentation,Templates,Development',1);
INSERT INTO prompts VALUES(147,'Open Source README Best Practices','Design README files for open source projects including badges, screenshots, API documentation, and community guidelines to attract contributors.','README,Open Source,Documentation,Community',1);
INSERT INTO prompts VALUES(148,'API Documentation README','Write clear API documentation README including endpoint descriptions, request/response examples, authentication, and getting started guides.','README,API,Documentation,Development',1);
INSERT INTO prompts VALUES(149,'Effective Code Commenting Strategy','Develop a code commenting strategy that explains why, not what. Include documentation comments, inline comments, and avoiding comment anti-patterns.','Code Comments,Documentation,Best Practices,Development',1);
INSERT INTO prompts VALUES(150,'JSDoc Documentation Standards','Implement JSDoc commenting standards for JavaScript projects including function documentation, type annotations, and automated documentation generation.','Code Comments,JavaScript,Documentation,Standards',1);
INSERT INTO prompts VALUES(151,'Python Docstring Best Practices','Write comprehensive Python docstrings following PEP conventions including function documentation, class documentation, and Sphinx integration.','Code Comments,Python,Documentation,Standards',1);
INSERT INTO prompts VALUES(152,'Database Migration Strategy','Plan and execute database migrations including schema changes, data transformation, rollback procedures, and zero-downtime deployments.','Migration,Database,Strategy,DevOps',1);
INSERT INTO prompts VALUES(153,'Cloud Migration Planning','Develop a comprehensive cloud migration strategy including application assessment, cost analysis, security considerations, and phased migration approach.','Migration,Cloud,Strategy,Planning',1);
INSERT INTO prompts VALUES(154,'Legacy System Migration','Design a strategy for migrating legacy systems to modern architectures including risk assessment, data migration, and business continuity planning.','Migration,Legacy,Strategy,Architecture',1);
INSERT INTO prompts VALUES(155,'Application Configuration Management','Implement secure application configuration management including environment variables, configuration files, and secrets management across different environments.','Configuration,Security,Development,Best Practices',1);
INSERT INTO prompts VALUES(156,'Docker Configuration Best Practices','Optimize Docker configuration including Dockerfile best practices, multi-stage builds, environment-specific configurations, and security considerations.','Configuration,Docker,DevOps,Security',1);
INSERT INTO prompts VALUES(157,'CI/CD Pipeline Configuration','Configure robust CI/CD pipelines including build stages, testing integration, deployment strategies, and environment-specific configurations.','Configuration,CI/CD,DevOps,Automation',1);
INSERT INTO prompts VALUES(158,'Application Logging Best Practices','Implement effective application logging including log levels, structured logging, log aggregation, and log analysis for troubleshooting and monitoring.','Logging,Monitoring,Best Practices,Development',1);
INSERT INTO prompts VALUES(159,'Centralized Logging with ELK Stack','Set up centralized logging using Elasticsearch, Logstash, and Kibana including log collection, parsing, indexing, and dashboard creation.','Logging,ELK,Monitoring,Infrastructure',1);
INSERT INTO prompts VALUES(160,'Security Event Logging','Implement security-focused logging including authentication events, access logs, security incidents, and compliance requirements for audit trails.','Logging,Security,Compliance,Monitoring',1);
INSERT INTO prompts VALUES(161,'Web Application Troubleshooting Guide','Develop a systematic approach to troubleshooting web applications including performance issues, connectivity problems, and user experience issues.','Troubleshooting,Web Dev,Performance,Debugging',1);
INSERT INTO prompts VALUES(162,'Network Troubleshooting Techniques','Master network troubleshooting including connectivity testing, DNS resolution, firewall issues, and load balancer configuration problems.','Troubleshooting,Network,Infrastructure,DevOps',1);
INSERT INTO prompts VALUES(163,'Database Performance Troubleshooting','Troubleshoot database performance issues including slow queries, index optimization, connection problems, and resource utilization analysis.','Troubleshooting,Database,Performance,Optimization',1);
INSERT INTO prompts VALUES(164,'System Reliability Engineering','Implement Site Reliability Engineering (SRE) practices including service level objectives (SLOs), error budgets, and automated incident response.','Reliability,SRE,Monitoring,DevOps',1);
INSERT INTO prompts VALUES(165,'Application Resilience Patterns','Design resilient applications using patterns like circuit breakers, retry mechanisms, bulkhead isolation, and graceful degradation strategies.','Reliability,Architecture,Best Practices,Development',1);
INSERT INTO prompts VALUES(166,'Disaster Recovery Planning','Develop comprehensive disaster recovery plans including backup strategies, recovery time objectives (RTO), recovery point objectives (RPO), and testing procedures.','Reliability,Disaster Recovery,Planning,Infrastructure',1);
INSERT INTO prompts VALUES(167,'Development Environment Setup','Create consistent development environment setup including IDE configuration, linting, formatting, pre-commit hooks, and team standards.','Setup,Development,Environment,Best Practices',1);
INSERT INTO prompts VALUES(168,'Docker Development Setup','Set up Docker-based development environments including multi-service applications, volume mounting, networking, and debugging configurations.','Setup,Docker,Development,DevOps',1);
INSERT INTO prompts VALUES(169,'CI/CD Environment Setup','Configure CI/CD environments including build agents, testing environments, deployment pipelines, and infrastructure as code setup.','Setup,CI/CD,DevOps,Infrastructure',1);
INSERT INTO prompts VALUES(170,'Effective Code Review Process','Establish an effective code review process including review guidelines, feedback delivery, automated checks, and team collaboration best practices.','Code Review,Team,Best Practices,Development',1);
INSERT INTO prompts VALUES(171,'Pull Request Review Checklist','Create a comprehensive pull request review checklist covering code quality, security, performance, testing, and documentation requirements.','Code Review,Quality,Security,Development',1);
INSERT INTO prompts VALUES(172,'Automated Code Review Tools','Implement automated code review tools including static analysis, linting, security scanning, and integration with CI/CD pipelines.','Code Review,Automation,Tools,CI/CD',1);
INSERT INTO prompts VALUES(173,'Multi-Cloud Strategy Implementation','Develop a multi-cloud strategy including vendor selection, cost optimization, security considerations, and avoiding vendor lock-in.','Cloud,Strategy,Multi-Cloud,Architecture',1);
INSERT INTO prompts VALUES(174,'Database Design Best Practices','Design efficient database schemas including normalization, indexing strategies, query optimization, and scalability considerations for modern applications.','Database,Design,Optimization,Architecture',1);
INSERT INTO prompts VALUES(175,'Infrastructure Monitoring Setup','Implement comprehensive infrastructure monitoring including server metrics, network monitoring, alerting, and dashboard creation using modern tools.','Infrastructure,Monitoring,DevOps,Alerting',1);
INSERT INTO prompts VALUES(176,'UI/UX Design System Creation','Create a comprehensive design system including component libraries, style guides, color palettes, typography, and accessibility guidelines.','Design,UI/UX,System,Accessibility',1);
INSERT INTO prompts VALUES(177,'Responsive Web Design Principles','Implement responsive web design using modern CSS techniques including flexbox, grid, media queries, and mobile-first approaches.','Design,Responsive,CSS,Web Dev',1);
INSERT INTO prompts VALUES(178,'User Experience Research Methods','Conduct user experience research including user interviews, usability testing, persona creation, and journey mapping for product improvements.','Design,UX,Research,User Experience',1);
INSERT INTO prompts VALUES(179,'Bug Lifecycle Management','Establish a comprehensive bug lifecycle management process including reporting, triage, assignment, resolution, and verification procedures.','Bug,Management,Process,Quality',1);
INSERT INTO prompts VALUES(180,'Bug Prevention Strategies','Implement bug prevention strategies including code reviews, automated testing, static analysis, and development best practices.','Bug,Prevention,Testing,Code Quality',1);
INSERT INTO prompts VALUES(181,'Advanced Jira Workflow Configuration','Configure advanced Jira workflows including custom fields, automation rules, reporting dashboards, and integration with development tools.','Jira,Workflow,Automation,Project Management',1);
INSERT INTO prompts VALUES(182,'Technical Interview Process Design','Design effective technical interview processes including coding challenges, system design questions, cultural fit assessment, and candidate evaluation criteria.','HR,Interviews,Technical,Hiring',1);
INSERT INTO prompts VALUES(183,'Developer Productivity Optimization','Optimize developer productivity including workflow automation, tool selection, environment setup, and time management techniques for software development.','Productivity,Development,Automation,Efficiency',1);
INSERT INTO prompts VALUES(184,'Agile Sprint Planning Best Practices','Master sprint planning techniques including story estimation, capacity planning, sprint goal setting, and team commitment strategies for successful agile delivery.','Agile,Planning,Sprint,Team',1);
INSERT INTO prompts VALUES(185,'Scrum Master Facilitation Guide','Develop scrum master facilitation skills including daily standups, retrospectives, sprint reviews, and conflict resolution in agile teams.','Agile,Scrum,Facilitation,Team',1);
INSERT INTO prompts VALUES(186,'Agile User Story Writing','Write effective user stories using INVEST criteria, acceptance criteria, story mapping, and persona-driven development for agile projects.','Agile,User Stories,Requirements,Development',1);
INSERT INTO prompts VALUES(187,'Agile Estimation Techniques','Master agile estimation methods including planning poker, t-shirt sizing, story points, and velocity tracking for accurate project planning.','Agile,Estimation,Planning,Project Management',1);
INSERT INTO prompts VALUES(188,'Agile Retrospective Facilitation','Facilitate effective agile retrospectives using various formats, action item tracking, and continuous improvement methodologies.','Agile,Retrospective,Improvement,Team',1);
INSERT INTO prompts VALUES(189,'Scaled Agile Framework (SAFe)','Implement Scaled Agile Framework including program increment planning, agile release trains, and enterprise-level agile coordination.','Agile,SAFe,Enterprise,Scaling',1);
INSERT INTO prompts VALUES(190,'Agile Metrics and KPIs','Track agile team performance using velocity, burndown charts, cycle time, and other metrics to drive continuous improvement.','Agile,Metrics,Performance,Analytics',1);
INSERT INTO prompts VALUES(191,'Git Hooks Implementation','Implement Git hooks for pre-commit, pre-push, and post-merge automation including code formatting, testing, and deployment triggers.','Git,Hooks,Automation,CI/CD',1);
INSERT INTO prompts VALUES(192,'Git Repository Architecture','Design optimal Git repository structures including monorepo vs multirepo strategies, submodules, and dependency management.','Git,Architecture,Repository,Organization',1);
INSERT INTO prompts VALUES(193,'Git Security Best Practices','Secure Git repositories including commit signing, sensitive data protection, access controls, and audit logging for enterprise environments.','Git,Security,Best Practices,Enterprise',1);
INSERT INTO prompts VALUES(194,'Git Performance Optimization','Optimize Git performance including large file handling with LFS, repository cleanup, shallow clones, and bandwidth optimization.','Git,Performance,Optimization,LFS',1);
INSERT INTO prompts VALUES(195,'Git Migration Strategies','Migrate between Git hosting platforms including history preservation, branch mapping, and team transition planning.','Git,Migration,Strategy,Planning',1);
INSERT INTO prompts VALUES(196,'Advanced Git Branching Models','Implement advanced branching models including GitFlow, GitHub Flow, GitLab Flow, and custom branching strategies for different project types.','Git,Branching,Models,Workflow',1);
INSERT INTO prompts VALUES(197,'Git Collaboration Workflows','Establish effective Git collaboration workflows including fork-and-pull, shared repository, and integration manager models for teams.','Git,Collaboration,Workflow,Team',1);
INSERT INTO prompts VALUES(198,'Test-Driven Development (TDD)','Master test-driven development methodology including red-green-refactor cycle, test design patterns, and TDD best practices for quality code.','Unit Tests,TDD,Development,Best Practices',1);
INSERT INTO prompts VALUES(199,'Mocking and Stubbing Strategies','Implement effective mocking and stubbing in unit tests including dependency injection, mock frameworks, and test isolation techniques.','Unit Tests,Mocking,Testing,Isolation',1);
INSERT INTO prompts VALUES(200,'Unit Test Code Coverage','Achieve meaningful unit test coverage including coverage metrics, branch coverage, and quality over quantity approaches to testing.','Unit Tests,Coverage,Quality,Metrics',1);
INSERT INTO prompts VALUES(201,'Parameterized Testing Techniques','Implement parameterized testing for comprehensive test coverage including data-driven tests, property-based testing, and test generation.','Unit Tests,Parameterized,Data-Driven,Testing',1);
INSERT INTO prompts VALUES(202,'Unit Testing Legacy Code','Add unit tests to legacy codebases including characterization tests, seam identification, and gradual test introduction strategies.','Unit Tests,Legacy,Refactoring,Strategy',1);
INSERT INTO prompts VALUES(203,'Performance Testing in Unit Tests','Include performance assertions in unit tests including benchmark testing, performance regression detection, and test execution optimization.','Unit Tests,Performance,Benchmarking,Optimization',1);
INSERT INTO prompts VALUES(204,'Unit Testing Best Practices Guide','Establish unit testing standards including naming conventions, test organization, assertion patterns, and maintainable test design.','Unit Tests,Best Practices,Standards,Maintainability',1);
INSERT INTO prompts VALUES(205,'Contract Testing Implementation','Implement contract testing for microservices including consumer-driven contracts, Pact testing, and API compatibility verification.','Integration Tests,Contract Testing,Microservices,API',1);
INSERT INTO prompts VALUES(206,'End-to-End Testing Strategy','Design comprehensive end-to-end testing strategies including user journey testing, cross-browser testing, and production-like environments.','Integration Tests,End-to-End,Strategy,Testing',1);
INSERT INTO prompts VALUES(207,'Third-Party Service Integration Testing','Test external service integrations including API mocking, service virtualization, and dependency isolation in integration tests.','Integration Tests,External Services,API,Mocking',1);
INSERT INTO prompts VALUES(208,'Message Queue Integration Testing','Test message queue integrations including event-driven architectures, message ordering, and asynchronous processing verification.','Integration Tests,Message Queue,Event-Driven,Async',1);
INSERT INTO prompts VALUES(209,'Integration Test Environment Management','Manage integration test environments including test data setup, environment isolation, and parallel test execution strategies.','Integration Tests,Environment,Test Data,Parallel',1);
INSERT INTO prompts VALUES(210,'Integration Testing in CI/CD','Integrate integration tests into CI/CD pipelines including test orchestration, failure handling, and deployment gates.','Integration Tests,CI/CD,Pipeline,Automation',1);
INSERT INTO prompts VALUES(211,'Distributed System Error Handling','Handle errors in distributed systems including circuit breakers, timeout strategies, retry mechanisms, and cascading failure prevention.','Error Handling,Distributed Systems,Circuit Breaker,Resilience',1);
INSERT INTO prompts VALUES(212,'Error Monitoring and Alerting','Implement comprehensive error monitoring including error tracking, alerting thresholds, and incident response automation.','Error Handling,Monitoring,Alerting,Incident Response',1);
INSERT INTO prompts VALUES(213,'User-Friendly Error Messages','Design user-friendly error messages including internationalization, actionable feedback, and graceful degradation for better user experience.','Error Handling,UX,User Experience,Internationalization',1);
INSERT INTO prompts VALUES(214,'Error Recovery Strategies','Implement error recovery mechanisms including automatic retry, fallback procedures, and system self-healing capabilities.','Error Handling,Recovery,Retry,Self-Healing',1);
INSERT INTO prompts VALUES(215,'Async Error Handling Patterns','Handle errors in asynchronous operations including Promise rejection, async/await error handling, and callback error patterns.','Error Handling,Async,Promises,Callbacks',1);
INSERT INTO prompts VALUES(216,'Error Handling Testing Strategies','Test error handling scenarios including chaos engineering, fault injection, and error simulation for robust applications.','Error Handling,Testing,Chaos Engineering,Fault Injection',1);
INSERT INTO prompts VALUES(217,'Logging for Error Diagnosis','Implement effective logging for error diagnosis including structured logging, correlation IDs, and distributed tracing for debugging.','Error Handling,Logging,Debugging,Distributed Tracing',1);
INSERT INTO prompts VALUES(218,'Technical Documentation README','Create technical documentation README for complex software projects including architecture diagrams, API references, and troubleshooting guides.','README,Documentation,Technical,Architecture',1);
INSERT INTO prompts VALUES(219,'Multi-Language README Setup','Set up multi-language README files for international projects including translation workflows, language-specific instructions, and maintenance strategies.','README,Internationalization,Multi-Language,Documentation',1);
INSERT INTO prompts VALUES(220,'Interactive README Features','Create interactive README files with demos, live examples, interactive code snippets, and dynamic content for better user engagement.','README,Interactive,Demos,Engagement',1);
INSERT INTO prompts VALUES(221,'README Automation and Maintenance','Automate README generation and maintenance including automated documentation updates, link checking, and content synchronization.','README,Automation,Maintenance,CI/CD',1);
INSERT INTO prompts VALUES(222,'Security-Focused README','Create security-focused README documentation including vulnerability reporting, security policies, and safe usage guidelines.','README,Security,Vulnerability,Policies',1);
INSERT INTO prompts VALUES(223,'README Performance Optimization','Optimize README files for performance including image optimization, content delivery, and mobile-friendly formatting.','README,Performance,Optimization,Mobile',1);
INSERT INTO prompts VALUES(224,'Community-Driven README','Design README files for community-driven projects including contribution workflows, community guidelines, and collaboration tools.','README,Community,Collaboration,Open Source',1);
INSERT INTO prompts VALUES(225,'Microservices Refactoring Strategy','Refactor monolithic applications into microservices including service boundaries, data migration, and gradual decomposition strategies.','Refactoring,Microservices,Architecture,Migration',1);
INSERT INTO prompts VALUES(226,'Performance Refactoring Techniques','Refactor code for performance improvements including algorithm optimization, memory management, and bottleneck elimination.','Refactoring,Performance,Optimization,Algorithms',1);
INSERT INTO prompts VALUES(227,'Security Refactoring Practices','Refactor code to improve security including vulnerability remediation, secure coding patterns, and security architecture improvements.','Refactoring,Security,Vulnerability,Architecture',1);
INSERT INTO prompts VALUES(228,'API Refactoring and Versioning','Refactor APIs while maintaining backward compatibility including versioning strategies, deprecation handling, and client migration.','Refactoring,API,Versioning,Backward Compatibility',1);
INSERT INTO prompts VALUES(229,'Frontend Refactoring Strategies','Refactor frontend applications including component restructuring, state management improvements, and performance optimization.','Refactoring,Frontend,Components,State Management',1);
INSERT INTO prompts VALUES(230,'Test-Driven Refactoring','Use test-driven approaches for safe refactoring including test coverage, regression prevention, and incremental improvements.','Refactoring,Testing,TDD,Regression',1);
INSERT INTO prompts VALUES(231,'Automated Refactoring Tools','Leverage automated refactoring tools and techniques including IDE refactoring, static analysis, and code transformation tools.','Refactoring,Automation,Tools,Static Analysis',1);
INSERT INTO prompts VALUES(232,'Microservices Logging Strategy','Implement logging for microservices architectures including distributed tracing, correlation IDs, and service mesh logging.','Logging,Microservices,Distributed Tracing,Service Mesh',1);
INSERT INTO prompts VALUES(233,'Log Analytics and Insights','Analyze logs for business insights including user behavior analysis, performance metrics, and operational intelligence.','Logging,Analytics,Business Intelligence,Metrics',1);
INSERT INTO prompts VALUES(234,'Real-time Log Processing','Process logs in real-time including stream processing, real-time alerting, and live dashboard updates for operational monitoring.','Logging,Real-time,Stream Processing,Monitoring',1);
INSERT INTO prompts VALUES(235,'Log Retention and Archival','Manage log retention and archival including storage optimization, compliance requirements, and cost-effective long-term storage.','Logging,Retention,Archival,Compliance',1);
INSERT INTO prompts VALUES(236,'Application Performance Logging','Implement performance logging including response time tracking, resource utilization, and performance regression detection.','Logging,Performance,Monitoring,Tracking',1);
INSERT INTO prompts VALUES(237,'Log-based Debugging Techniques','Use logs effectively for debugging including debug logging strategies, log correlation, and production debugging techniques.','Logging,Debugging,Production,Correlation',1);
INSERT INTO prompts VALUES(238,'Structured Logging Implementation','Implement structured logging including JSON logging, log schema design, and machine-readable log formats for better analysis.','Logging,Structured,JSON,Schema',1);
INSERT INTO prompts VALUES(239,'Production Environment Setup','Set up production environments including server configuration, monitoring, backup systems, and disaster recovery procedures.','Setup,Production,Configuration,Disaster Recovery',1);
INSERT INTO prompts VALUES(240,'Multi-Environment Setup Strategy','Configure multiple environments (dev, staging, prod) including environment parity, configuration management, and deployment pipelines.','Setup,Multi-Environment,Configuration,Deployment',1);
INSERT INTO prompts VALUES(241,'Team Onboarding Setup','Create team onboarding setup procedures including development environment provisioning, access management, and documentation.','Setup,Onboarding,Team,Access Management',1);
INSERT INTO prompts VALUES(242,'Security Hardening Setup','Implement security hardening during environment setup including access controls, encryption, and security monitoring configuration.','Setup,Security,Hardening,Encryption',1);
INSERT INTO prompts VALUES(243,'Automated Environment Provisioning','Automate environment provisioning using Infrastructure as Code including Terraform, Ansible, and cloud automation tools.','Setup,Automation,Infrastructure as Code,Cloud',1);
INSERT INTO prompts VALUES(244,'Monitoring and Observability Setup','Set up comprehensive monitoring and observability including metrics collection, alerting, and distributed tracing systems.','Setup,Monitoring,Observability,Metrics',1);
INSERT INTO prompts VALUES(245,'Backup and Recovery Setup','Configure backup and recovery systems including automated backups, recovery testing, and business continuity planning.','Setup,Backup,Recovery,Business Continuity',1);
INSERT INTO prompts VALUES(246,'Chaos Engineering Implementation','Implement chaos engineering practices including fault injection, system resilience testing, and failure scenario planning.','Reliability,Chaos Engineering,Resilience,Testing',1);
INSERT INTO prompts VALUES(247,'Service Level Agreements (SLA)','Define and implement SLAs including uptime targets, performance metrics, and customer communication during incidents.','Reliability,SLA,Uptime,Performance',1);
INSERT INTO prompts VALUES(248,'High Availability Architecture','Design high availability architectures including redundancy, failover mechanisms, and zero-downtime deployment strategies.','Reliability,High Availability,Redundancy,Failover',1);
INSERT INTO prompts VALUES(249,'Incident Response Procedures','Establish incident response procedures including escalation protocols, communication plans, and post-incident reviews.','Reliability,Incident Response,Escalation,Communication',1);
INSERT INTO prompts VALUES(250,'Reliability Testing Strategies','Implement reliability testing including stress testing, endurance testing, and failure recovery testing for robust systems.','Reliability,Testing,Stress Testing,Recovery',1);
INSERT INTO prompts VALUES(251,'Performance Reliability Optimization','Optimize system performance for reliability including resource management, capacity planning, and performance monitoring.','Reliability,Performance,Capacity Planning,Monitoring',1);
INSERT INTO prompts VALUES(252,'Data Reliability and Integrity','Ensure data reliability and integrity including backup strategies, data validation, and corruption detection mechanisms.','Reliability,Data Integrity,Backup,Validation',1);
INSERT INTO prompts VALUES(253,'Technical Writing Best Practices','Master technical writing including clear documentation, API guides, user manuals, and technical blog posts for developer audiences.','Writing,Documentation,Technical,Communication',1);
INSERT INTO prompts VALUES(254,'Content Strategy for Developers','Develop content strategy for technical audiences including blog planning, documentation hierarchy, and developer engagement.','Writing,Content Strategy,Developer,Engagement',1);
INSERT INTO prompts VALUES(255,'Code Documentation Writing','Write effective code documentation including inline comments, API documentation, and architectural decision records (ADRs).','Writing,Code Documentation,API,Architecture',1);
INSERT INTO prompts VALUES(256,'Grant and Proposal Writing','Write compelling grant proposals and project proposals including budget planning, timeline development, and stakeholder communication.','Writing,Grants,Proposals,Planning',1);
INSERT INTO prompts VALUES(257,'Email Communication Best Practices','Write professional emails including clear subject lines, concise messaging, action items, and effective follow-up strategies.','Writing,Email,Communication,Professional',1);
INSERT INTO prompts VALUES(258,'Meeting Notes and Minutes','Take effective meeting notes including action items, decision tracking, and clear communication of outcomes to stakeholders.','Writing,Meetings,Notes,Communication',1);
INSERT INTO prompts VALUES(259,'Report Writing and Analytics','Write comprehensive reports including data analysis, executive summaries, recommendations, and visual data presentation.','Writing,Reports,Analytics,Data',1);
INSERT INTO prompts VALUES(260,'Personal Productivity Systems','Develop personal productivity systems including task management, time blocking, goal setting, and habit formation for developers.','Personal,Productivity,Time Management,Goals',1);
INSERT INTO prompts VALUES(261,'Work-Life Balance for Developers','Maintain healthy work-life balance including boundary setting, stress management, and preventing burnout in tech careers.','Personal,Work-Life Balance,Stress Management,Health',1);
INSERT INTO prompts VALUES(262,'Career Development Planning','Plan career development including skill assessment, learning goals, networking strategies, and career transition planning.','Personal,Career Development,Learning,Networking',1);
INSERT INTO prompts VALUES(263,'Personal Finance for Tech Workers','Manage personal finances including salary negotiation, investment strategies, retirement planning, and equity compensation.','Personal,Finance,Investment,Salary',1);
INSERT INTO prompts VALUES(264,'Learning and Skill Development','Develop continuous learning strategies including online courses, coding challenges, conferences, and staying current with technology.','Personal,Learning,Skills,Technology',1);
INSERT INTO prompts VALUES(265,'Personal Branding for Developers','Build personal brand including online presence, portfolio development, social media strategy, and thought leadership.','Personal,Branding,Portfolio,Social Media',1);
INSERT INTO prompts VALUES(266,'Health and Wellness for Remote Workers','Maintain health and wellness while working remotely including ergonomics, exercise routines, and mental health strategies.','Personal,Health,Remote Work,Wellness',1);
INSERT INTO prompts VALUES(267,'Creative Problem Solving in Tech','Apply creative problem-solving techniques including design thinking, brainstorming methods, and innovative solution development.','Creative,Problem Solving,Design Thinking,Innovation',1);
INSERT INTO prompts VALUES(268,'UI/UX Design Creativity','Enhance creativity in UI/UX design including color theory, typography, user psychology, and creative design processes.','Creative,UI/UX,Design,Psychology',1);
INSERT INTO prompts VALUES(269,'Creative Content Creation','Create engaging content including blog posts, tutorials, videos, and interactive content for technical audiences.','Creative,Content Creation,Tutorials,Video',1);
INSERT INTO prompts VALUES(270,'Innovation Workshops and Brainstorming','Facilitate innovation workshops including ideation techniques, collaborative creativity, and innovation methodologies.','Creative,Innovation,Workshops,Collaboration',1);
INSERT INTO prompts VALUES(271,'Creative Coding Projects','Develop creative coding projects including generative art, interactive installations, and experimental programming techniques.','Creative,Coding,Art,Interactive',1);
INSERT INTO prompts VALUES(272,'Storytelling for Technical Presentations','Use storytelling techniques in technical presentations including narrative structure, audience engagement, and compelling demos.','Creative,Storytelling,Presentations,Communication',1);
INSERT INTO prompts VALUES(273,'Creative Team Building Activities','Design creative team building activities including hackathons, game development, and collaborative creative projects.','Creative,Team Building,Hackathons,Games',1);
INSERT INTO prompts VALUES(274,'Developer Social Media Strategy','Build social media presence for developers including LinkedIn optimization, Twitter engagement, and professional networking.','Social Media,Developer,Networking,LinkedIn',1);
INSERT INTO prompts VALUES(275,'Technical Content for Social Media','Create technical content for social media including code snippets, tutorials, and engaging developer-focused posts.','Social Media,Technical Content,Tutorials,Code',1);
INSERT INTO prompts VALUES(276,'Community Building on Social Platforms','Build technical communities on social platforms including Discord, Slack, and Reddit for developer engagement.','Social Media,Community Building,Discord,Engagement',1);
INSERT INTO prompts VALUES(277,'Influencer Marketing for Tech Products','Leverage influencer marketing for tech products including developer advocate programs, partnership strategies, and content collaboration.','Social Media,Influencer Marketing,Tech Products,Advocacy',1);
INSERT INTO prompts VALUES(278,'Social Media Analytics and Metrics','Analyze social media performance including engagement metrics, audience insights, and ROI measurement for tech content.','Social Media,Analytics,Metrics,ROI',1);
INSERT INTO prompts VALUES(279,'Open Source Project Promotion','Promote open source projects on social media including launch strategies, community engagement, and contributor recruitment.','Social Media,Open Source,Promotion,Community',1);
INSERT INTO prompts VALUES(280,'Slack Workspace Organization','Organize Slack workspaces including channel structure, naming conventions, permissions, and workflow optimization for teams.','Slack,Organization,Workflow,Team',1);
INSERT INTO prompts VALUES(281,'Slack Bot Development','Develop Slack bots including workflow automation, custom commands, API integrations, and team productivity enhancement.','Slack,Bot Development,Automation,API',1);
INSERT INTO prompts VALUES(282,'Slack Integration with Development Tools','Integrate Slack with development tools including GitHub, Jira, monitoring systems, and CI/CD pipeline notifications.','Slack,Integration,GitHub,CI/CD',1);
INSERT INTO prompts VALUES(283,'Remote Team Communication via Slack','Optimize remote team communication using Slack including async communication, time zone management, and team bonding.','Slack,Remote Team,Communication,Async',1);
INSERT INTO prompts VALUES(284,'Slack Security and Compliance','Implement Slack security including data protection, compliance requirements, access controls, and audit logging.','Slack,Security,Compliance,Access Control',1);
INSERT INTO prompts VALUES(285,'Incident Response in Slack','Coordinate incident response using Slack including alert channels, escalation procedures, and post-incident communication.','Slack,Incident Response,Alerts,Communication',1);
INSERT INTO prompts VALUES(286,'Slack Workflow Automation','Automate workflows in Slack including approval processes, task assignment, reporting, and team coordination.','Slack,Workflow Automation,Approval,Task Management',1);
INSERT INTO prompts VALUES(287,'Email Marketing for Tech Products','Design email marketing campaigns for tech products including developer newsletters, product updates, and user onboarding sequences.','Email,Marketing,Tech Products,Onboarding',1);
INSERT INTO prompts VALUES(288,'Technical Email Templates','Create technical email templates including incident notifications, status updates, deployment announcements, and user communications.','Email,Templates,Technical,Notifications',1);
INSERT INTO prompts VALUES(289,'Email Automation Systems','Implement email automation including triggered campaigns, user segmentation, A/B testing, and personalization strategies.','Email,Automation,Segmentation,Personalization',1);
INSERT INTO prompts VALUES(290,'Email Security Best Practices','Secure email communications including encryption, phishing prevention, authentication protocols, and security awareness training.','Email,Security,Encryption,Phishing',1);
INSERT INTO prompts VALUES(291,'Customer Support Email Management','Manage customer support emails including ticket systems, response time optimization, escalation procedures, and knowledge base integration.','Email,Customer Support,Tickets,Knowledge Base',1);
INSERT INTO prompts VALUES(292,'Email Performance Analytics','Analyze email performance including open rates, click-through rates, deliverability optimization, and campaign effectiveness measurement.','Email,Analytics,Performance,Deliverability',1);
INSERT INTO prompts VALUES(293,'Internal Communication Email Strategy','Optimize internal email communication including company updates, policy announcements, team coordination, and meeting follow-ups.','Email,Internal Communication,Company Updates,Coordination',1);
INSERT INTO prompts VALUES(294,'Online Course Development','Develop online courses for technical topics including curriculum design, video production, assessment creation, and student engagement.','Education,Online Courses,Curriculum,Video',1);
INSERT INTO prompts VALUES(295,'Technical Workshop Facilitation','Facilitate technical workshops including hands-on coding sessions, group exercises, skill assessments, and learning outcomes measurement.','Education,Workshops,Facilitation,Coding',1);
INSERT INTO prompts VALUES(296,'Mentorship Program Development','Develop mentorship programs including mentor training, mentee matching, goal setting, and program evaluation for tech teams.','Education,Mentorship,Training,Goals',1);
INSERT INTO prompts VALUES(297,'Learning Management System Setup','Set up learning management systems including content organization, user management, progress tracking, and certification programs.','Education,LMS,Content,Certification',1);
INSERT INTO prompts VALUES(298,'Technical Training Curriculum','Design technical training curricula including skill assessment, learning paths, practical exercises, and competency evaluation.','Education,Training,Curriculum,Assessment',1);
INSERT INTO prompts VALUES(299,'Educational Content Creation','Create educational content including tutorials, documentation, interactive examples, and assessment materials for technical learning.','Education,Content Creation,Tutorials,Documentation',1);
INSERT INTO prompts VALUES(300,'Corporate Learning Strategy','Develop corporate learning strategies including employee development, skill gap analysis, training ROI, and continuous learning culture.','Education,Corporate Learning,Strategy,Development',1);
INSERT INTO prompts VALUES(301,'Technical Customer Support Strategy','Develop technical customer support strategies including troubleshooting guides, escalation procedures, and customer satisfaction measurement.','Customer Service,Technical Support,Troubleshooting,Satisfaction',1);
INSERT INTO prompts VALUES(302,'Customer Onboarding Process','Design customer onboarding processes including welcome sequences, product tours, training materials, and success metrics.','Customer Service,Onboarding,Training,Success',1);
INSERT INTO prompts VALUES(303,'Customer Feedback Management','Manage customer feedback including collection methods, analysis processes, response strategies, and product improvement integration.','Customer Service,Feedback,Analysis,Improvement',1);
INSERT INTO prompts VALUES(304,'Self-Service Support Systems','Build self-service support systems including knowledge bases, FAQ automation, chatbots, and user empowerment tools.','Customer Service,Self-Service,Knowledge Base,Chatbots',1);
INSERT INTO prompts VALUES(305,'Customer Success Metrics','Define and track customer success metrics including NPS, churn reduction, usage analytics, and value realization measurement.','Customer Service,Success Metrics,NPS,Analytics',1);
INSERT INTO prompts VALUES(306,'Proactive Customer Communication','Implement proactive customer communication including status updates, feature announcements, maintenance notifications, and health checks.','Customer Service,Proactive Communication,Updates,Health Checks',1);
INSERT INTO prompts VALUES(307,'Customer Support Technology Stack','Design customer support technology stack including ticketing systems, CRM integration, communication tools, and analytics platforms.','Customer Service,Technology Stack,CRM,Analytics',1);
INSERT INTO prompts VALUES(308,'Effective Meeting Facilitation','Facilitate effective meetings including agenda setting, time management, participation encouragement, and action item tracking.','Meetings,Facilitation,Agenda,Time Management',1);
INSERT INTO prompts VALUES(309,'Remote Meeting Best Practices','Optimize remote meetings including video conferencing setup, engagement techniques, screen sharing, and technical troubleshooting.','Meetings,Remote,Video Conferencing,Engagement',1);
INSERT INTO prompts VALUES(310,'Agile Ceremony Facilitation','Facilitate agile ceremonies including stand-ups, sprint planning, retrospectives, and review meetings for maximum team effectiveness.','Meetings,Agile,Ceremonies,Retrospectives',1);
INSERT INTO prompts VALUES(311,'Technical Architecture Reviews','Conduct technical architecture review meetings including design presentations, security assessments, and consensus building.','Meetings,Architecture Review,Design,Security',1);
INSERT INTO prompts VALUES(312,'Stakeholder Alignment Meetings','Facilitate stakeholder alignment meetings including requirement gathering, expectation setting, and conflict resolution.','Meetings,Stakeholder,Alignment,Requirements',1);
INSERT INTO prompts VALUES(313,'Project Kickoff and Planning','Conduct project kickoff meetings including team introductions, goal setting, timeline planning, and success criteria definition.','Meetings,Project Kickoff,Planning,Goals',1);
INSERT INTO prompts VALUES(314,'All-Hands and Town Hall Meetings','Organize all-hands meetings including company updates, Q&A sessions, team recognition, and strategic communication.','Meetings,All-Hands,Company Updates,Communication',1);
INSERT INTO prompts VALUES(315,'Bug Triage and Prioritization','Establish bug triage processes including severity classification, impact assessment, priority scoring, and resource allocation for efficient bug resolution.','Bug,Triage,Priority,Management',1);
INSERT INTO prompts VALUES(316,'Bug Reproduction and Documentation','Document bugs effectively including reproduction steps, environment details, expected vs actual behavior, and comprehensive debugging information.','Bug,Documentation,Reproduction,Debugging',1);
INSERT INTO prompts VALUES(317,'Bug Metrics and Analytics','Track bug metrics including discovery rate, resolution time, escape rate, and quality trends to improve development processes.','Bug,Metrics,Analytics,Quality',1);
INSERT INTO prompts VALUES(318,'Bug Communication and Stakeholder Updates','Communicate bug status to stakeholders including user impact, timeline estimates, workarounds, and resolution updates.','Bug,Communication,Stakeholders,Updates',1);
INSERT INTO prompts VALUES(319,'Bug Postmortem and Learning','Conduct bug postmortems including root cause analysis, process improvements, preventive measures, and team learning initiatives.','Bug,Postmortem,Root Cause,Learning',1);
INSERT INTO prompts VALUES(320,'Cloud Cost Optimization','Optimize cloud costs including resource right-sizing, reserved instances, spot instances, and automated cost monitoring and alerting.','Cloud,Cost Optimization,Resource Management,Monitoring',1);
INSERT INTO prompts VALUES(321,'Cloud Security Best Practices','Implement cloud security including identity management, encryption, network security, compliance, and security monitoring in cloud environments.','Cloud,Security,Identity Management,Compliance',1);
INSERT INTO prompts VALUES(322,'Cloud Native Application Design','Design cloud-native applications including microservices architecture, containerization, serverless computing, and cloud-first development practices.','Cloud,Cloud Native,Microservices,Serverless',1);
INSERT INTO prompts VALUES(323,'Cloud Disaster Recovery Planning','Plan cloud disaster recovery including backup strategies, failover procedures, RTO/RPO targets, and business continuity in cloud environments.','Cloud,Disaster Recovery,Backup,Business Continuity',1);
INSERT INTO prompts VALUES(324,'Cloud Performance Optimization','Optimize cloud application performance including auto-scaling, load balancing, CDN implementation, and performance monitoring.','Cloud,Performance,Auto-scaling,Load Balancing',1);
INSERT INTO prompts VALUES(325,'Remote Code Review Best Practices','Conduct effective remote code reviews including asynchronous review processes, clear feedback guidelines, and virtual collaboration techniques.','Code Review,Remote,Collaboration,Feedback',1);
INSERT INTO prompts VALUES(326,'Code Review Training and Mentorship','Train team members in code review practices including review techniques, feedback delivery, and mentoring junior developers through reviews.','Code Review,Training,Mentorship,Development',1);
INSERT INTO prompts VALUES(327,'Code Review Metrics and Improvement','Track code review metrics including review time, defect detection rate, and process improvements to enhance code quality and team efficiency.','Code Review,Metrics,Improvement,Quality',1);
INSERT INTO prompts VALUES(328,'Legacy Code Review Strategies','Review legacy code effectively including technical debt assessment, refactoring opportunities, and gradual improvement strategies.','Code Review,Legacy Code,Technical Debt,Refactoring',1);
INSERT INTO prompts VALUES(329,'Security-Focused Code Reviews','Conduct security-focused code reviews including vulnerability identification, secure coding practices, and security architecture validation.','Code Review,Security,Vulnerability,Architecture',1);
INSERT INTO prompts VALUES(330,'Code Review Documentation and Standards','Document code review standards including coding conventions, review checklists, approval criteria, and team guidelines.','Code Review,Documentation,Standards,Guidelines',1);
INSERT INTO prompts VALUES(331,'Environment-Specific Configuration','Manage environment-specific configurations including development, staging, and production settings with proper isolation and security.','Configuration,Environment,Security,Management',1);
INSERT INTO prompts VALUES(332,'Configuration Validation and Testing','Validate and test configurations including automated validation, configuration drift detection, and testing procedures.','Configuration,Validation,Testing,Automation',1);
INSERT INTO prompts VALUES(333,'Dynamic Configuration Management','Implement dynamic configuration management including real-time updates, feature flags, and configuration rollback capabilities.','Configuration,Dynamic,Feature Flags,Rollback',1);
INSERT INTO prompts VALUES(334,'Configuration Documentation and Governance','Document configuration management including governance policies, change procedures, and configuration standards for teams.','Configuration,Documentation,Governance,Standards',1);
INSERT INTO prompts VALUES(335,'Database Performance Tuning','Tune database performance including query optimization, index strategies, connection pooling, and performance monitoring for high-load applications.','Database,Performance,Optimization,Monitoring',1);
INSERT INTO prompts VALUES(336,'Database Backup and Recovery','Implement database backup and recovery including automated backups, point-in-time recovery, disaster recovery, and backup testing procedures.','Database,Backup,Recovery,Disaster Recovery',1);
INSERT INTO prompts VALUES(337,'Database Security Implementation','Secure databases including access controls, encryption, audit logging, and compliance with data protection regulations.','Database,Security,Encryption,Compliance',1);
INSERT INTO prompts VALUES(338,'Distributed System Debugging','Debug distributed systems including distributed tracing, log correlation, microservices debugging, and complex system interactions.','Debugging,Distributed Systems,Tracing,Microservices',1);
INSERT INTO prompts VALUES(339,'Memory and Performance Debugging','Debug memory and performance issues including memory leaks, profiling techniques, bottleneck identification, and optimization strategies.','Debugging,Memory,Performance,Profiling',1);
INSERT INTO prompts VALUES(340,'Frontend Debugging Techniques','Debug frontend applications including browser debugging, network issues, state management problems, and responsive design issues.','Debugging,Frontend,Browser,State Management',1);
INSERT INTO prompts VALUES(341,'Remote and Production Debugging','Debug applications in remote and production environments including remote debugging tools, log analysis, and non-intrusive debugging techniques.','Debugging,Remote,Production,Tools',1);
INSERT INTO prompts VALUES(342,'Design System Implementation','Implement comprehensive design systems including component libraries, design tokens, accessibility standards, and cross-platform consistency.','Design,Design System,Components,Accessibility',1);
INSERT INTO prompts VALUES(343,'Software Engineering Best Practices','Implement software engineering best practices including SOLID principles, design patterns, code quality, and maintainable architecture design.','Engineering,Best Practices,SOLID,Architecture',1);
INSERT INTO prompts VALUES(344,'Engineering Team Leadership','Lead engineering teams including technical decision making, team growth, project planning, and engineering culture development.','Engineering,Leadership,Team,Culture',1);
INSERT INTO prompts VALUES(345,'Engineering Process Optimization','Optimize engineering processes including development workflows, quality assurance, release management, and continuous improvement.','Engineering,Process,Optimization,Quality',1);
INSERT INTO prompts VALUES(346,'Technical Debt Management','Manage technical debt including debt identification, prioritization, refactoring strategies, and balancing feature development with maintenance.','Engineering,Technical Debt,Refactoring,Strategy',1);
INSERT INTO prompts VALUES(347,'Engineering Metrics and KPIs','Track engineering metrics including velocity, code quality, deployment frequency, and team productivity to drive data-driven improvements.','Engineering,Metrics,KPIs,Productivity',1);
INSERT INTO prompts VALUES(348,'Cross-Functional Engineering Collaboration','Foster cross-functional collaboration including product partnerships, design collaboration, stakeholder communication, and alignment strategies.','Engineering,Collaboration,Cross-Functional,Communication',1);
INSERT INTO prompts VALUES(349,'Technical Talent Acquisition','Recruit technical talent including job description writing, candidate sourcing, technical assessment design, and interview process optimization.','HR,Recruitment,Technical,Assessment',1);
INSERT INTO prompts VALUES(350,'Employee Performance Management','Manage employee performance including goal setting, performance reviews, feedback delivery, and career development planning.','HR,Performance,Goals,Career Development',1);
INSERT INTO prompts VALUES(351,'Remote Work Policy Development','Develop remote work policies including remote collaboration guidelines, productivity standards, communication protocols, and work-life balance.','HR,Remote Work,Policy,Collaboration',1);
INSERT INTO prompts VALUES(352,'Diversity and Inclusion Initiatives','Implement diversity and inclusion initiatives including bias training, inclusive hiring practices, and fostering diverse team environments.','HR,Diversity,Inclusion,Training',1);
INSERT INTO prompts VALUES(353,'Employee Engagement and Retention','Improve employee engagement including satisfaction surveys, retention strategies, recognition programs, and culture building initiatives.','HR,Engagement,Retention,Culture',1);
INSERT INTO prompts VALUES(354,'Infrastructure Automation','Automate infrastructure management including Infrastructure as Code, automated provisioning, configuration management, and deployment automation.','Infrastructure,Automation,Infrastructure as Code,Deployment',1);
INSERT INTO prompts VALUES(355,'Infrastructure Scaling Strategies','Design infrastructure scaling strategies including horizontal and vertical scaling, auto-scaling, load distribution, and capacity planning.','Infrastructure,Scaling,Auto-scaling,Capacity Planning',1);
INSERT INTO prompts VALUES(356,'Infrastructure Cost Management','Manage infrastructure costs including resource optimization, cost allocation, budget planning, and cost monitoring and alerting.','Infrastructure,Cost Management,Optimization,Budget',1);
INSERT INTO prompts VALUES(357,'Jira Project Configuration','Configure Jira projects including issue types, workflows, screens, fields, and permissions for effective project management.','Jira,Configuration,Workflow,Project Management',1);
INSERT INTO prompts VALUES(358,'Jira Reporting and Analytics','Create Jira reports and analytics including dashboards, burndown charts, velocity reports, and custom reporting for team insights.','Jira,Reporting,Analytics,Dashboards',1);
INSERT INTO prompts VALUES(359,'Jira Integration with Development Tools','Integrate Jira with development tools including Git, CI/CD pipelines, testing tools, and deployment systems for seamless workflows.','Jira,Integration,Development Tools,CI/CD',1);
INSERT INTO prompts VALUES(360,'Jira Administration and Maintenance','Administer Jira including user management, system configuration, performance optimization, and regular maintenance procedures.','Jira,Administration,User Management,Maintenance',1);
INSERT INTO prompts VALUES(361,'Jira Best Practices for Agile Teams','Implement Jira best practices for agile teams including sprint planning, backlog management, story tracking, and team collaboration.','Jira,Agile,Sprint Planning,Collaboration',1);
INSERT INTO prompts VALUES(362,'Technical Product Marketing','Market technical products including developer-focused messaging, technical content marketing, competitive analysis, and go-to-market strategies.','Marketing,Technical Products,Developer,Strategy',1);
INSERT INTO prompts VALUES(363,'Content Marketing for Developers','Create content marketing for developer audiences including technical blogs, tutorials, documentation, and thought leadership content.','Marketing,Content,Developer,Tutorials',1);
INSERT INTO prompts VALUES(364,'Marketing Analytics and Attribution','Analyze marketing performance including attribution models, campaign effectiveness, ROI measurement, and data-driven optimization.','Marketing,Analytics,Attribution,ROI',1);
INSERT INTO prompts VALUES(365,'Community Marketing and Events','Build community marketing including developer events, conferences, meetups, hackathons, and community engagement strategies.','Marketing,Community,Events,Hackathons',1);
INSERT INTO prompts VALUES(366,'Digital Marketing Automation','Implement marketing automation including lead nurturing, email campaigns, behavioral targeting, and conversion optimization.','Marketing,Automation,Lead Nurturing,Conversion',1);
INSERT INTO prompts VALUES(367,'Data Migration Best Practices','Execute data migrations including migration planning, data validation, rollback procedures, and zero-downtime migration strategies.','Migration,Data,Validation,Zero-Downtime',1);
INSERT INTO prompts VALUES(368,'Application Migration Strategies','Migrate applications including platform migration, technology stack updates, dependency management, and phased migration approaches.','Migration,Application,Platform,Dependencies',1);
INSERT INTO prompts VALUES(369,'Migration Testing and Validation','Test and validate migrations including migration testing frameworks, data integrity verification, and performance validation.','Migration,Testing,Validation,Performance',1);
INSERT INTO prompts VALUES(370,'Project Management Fundamentals','Manage projects effectively including planning, resource allocation, timeline management, risk assessment, and stakeholder communication.','Non-Technical,Project Management,Planning,Communication',1);
INSERT INTO prompts VALUES(371,'Business Process Improvement','Improve business processes including process mapping, efficiency optimization, automation opportunities, and change management.','Non-Technical,Process Improvement,Automation,Change Management',1);
INSERT INTO prompts VALUES(372,'Stakeholder Management','Manage stakeholders including relationship building, expectation management, communication strategies, and conflict resolution.','Non-Technical,Stakeholder Management,Communication,Conflict Resolution',1);
INSERT INTO prompts VALUES(373,'Budget Planning and Management','Plan and manage budgets including cost estimation, budget allocation, expense tracking, and financial reporting for projects.','Non-Technical,Budget,Planning,Financial',1);
INSERT INTO prompts VALUES(374,'Change Management Strategies','Implement change management including change planning, communication strategies, training programs, and adoption measurement.','Non-Technical,Change Management,Planning,Training',1);
INSERT INTO prompts VALUES(375,'Vendor and Contract Management','Manage vendors and contracts including vendor selection, contract negotiation, performance monitoring, and relationship management.','Non-Technical,Vendor Management,Contracts,Negotiation',1);
INSERT INTO prompts VALUES(376,'Time Management Techniques','Master time management including prioritization methods, calendar optimization, focus techniques, and productivity system design.','Productivity,Time Management,Prioritization,Focus',1);
INSERT INTO prompts VALUES(377,'Workflow Automation Tools','Implement workflow automation including task automation, integration tools, process optimization, and productivity enhancement.','Productivity,Workflow Automation,Integration,Optimization',1);
INSERT INTO prompts VALUES(378,'Digital Minimalism and Focus','Practice digital minimalism including distraction management, focused work techniques, technology boundaries, and mental clarity.','Productivity,Digital Minimalism,Focus,Boundaries',1);
INSERT INTO prompts VALUES(379,'Systematic Troubleshooting Methodology','Apply systematic troubleshooting including problem identification, hypothesis testing, root cause analysis, and solution validation.','Troubleshooting,Methodology,Root Cause,Analysis',1);
INSERT INTO prompts VALUES(380,'Cloud Infrastructure Troubleshooting','Troubleshoot cloud infrastructure including service connectivity, performance issues, configuration problems, and resource constraints.','Troubleshooting,Cloud,Infrastructure,Performance',1);
INSERT INTO prompts VALUES(381,'Application Performance Troubleshooting','Troubleshoot application performance including bottleneck identification, memory analysis, database optimization, and caching strategies.','Troubleshooting,Application,Performance,Optimization',1);
INSERT INTO prompts VALUES(382,'Security Incident Troubleshooting','Troubleshoot security incidents including threat analysis, breach investigation, vulnerability assessment, and incident response.','Troubleshooting,Security,Incident,Investigation',1);
INSERT INTO prompts VALUES(383,'User Experience Troubleshooting','Troubleshoot user experience issues including usability problems, accessibility issues, browser compatibility, and user feedback analysis.','Troubleshooting,User Experience,Usability,Accessibility',1);
INSERT INTO prompts VALUES(384,'Version Control Strategy Design','Design version control strategies including branching models, release management, tag conventions, and team workflow optimization.','Version Control,Strategy,Branching,Release Management',1);
INSERT INTO prompts VALUES(385,'Large Repository Management','Manage large repositories including performance optimization, repository splitting, file organization, and history management.','Version Control,Large Repository,Performance,Organization',1);
INSERT INTO prompts VALUES(386,'Version Control Security','Secure version control including access controls, sensitive data protection, audit logging, and security policy enforcement.','Version Control,Security,Access Control,Audit',1);
INSERT INTO prompts VALUES(387,'Version Control Training and Adoption','Train teams in version control including best practices, workflow adoption, troubleshooting, and skill development programs.','Version Control,Training,Adoption,Best Practices',1);
INSERT INTO prompts VALUES(388,'Integration Testing Performance Optimization','Optimize integration test performance including parallel execution, test data management, environment provisioning, and test suite optimization for faster feedback loops.','Integration Tests,Performance,Optimization,Parallel',1);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('prompts',388);
COMMIT;
